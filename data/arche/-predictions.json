{
    "0": "SELECT T1.Name, T1.Age FROM singer AS T1 WHERE T1.Song_Name = 'Gentleman'\t----- bird -----\tconcert_singer",
    "1": "SELECT T1.Name, T1.Age FROM singer AS T1 WHERE T1.Singer_ID IN (SELECT T2.Singer_ID FROM singer_in_concert AS T2 INNER JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T3.Song_Name = 'Gentleman')\t----- bird -----\tconcert_singer",
    "2": "SELECT T1.Name, (2001 - T1.Age) AS Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Song_Name = 'Gentleman'\t----- bird -----\tconcert_singer",
    "3": "SELECT T2.Name, (2001 - T2.Age) AS Age FROM singer AS T2 WHERE T2.Song_Name = 'Gentleman'\t----- bird -----\tconcert_singer",
    "4": "SELECT T1.Name, T1.Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Theme = 'Free choice'\t----- bird -----\tconcert_singer",
    "5": "SELECT T1.Name, T1.Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Theme = 'Free Choice'\t----- bird -----\tconcert_singer",
    "6": "SELECT T1.Name, (2023 - T1.Age) AS Calculated_Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T1.Age > (2023 - 1985) AND T3.Theme = 'Free choice'\t----- bird -----\tconcert_singer",
    "7": "SELECT T1.Name, (2023 - CAST(T1.Song_release_year AS INTEGER)) AS Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE CAST(T1.Song_release_year AS INTEGER) < 1985 AND T3.Theme = 'Free Choice'\t----- bird -----\tconcert_singer",
    "8": "SELECT (STRFTIME('%Y', 'now') - (SELECT MIN(Year) FROM concert)) AS years_since_earliest_concert\t----- bird -----\tconcert_singer",
    "9": "SELECT (STRFTIME('%Y', 'now') - MIN(Year)) AS years_ago FROM concert;\t----- bird -----\tconcert_singer",
    "10": "SELECT (strftime('%Y', 'now') - (SELECT MIN(Year) FROM concert)) - (SELECT Year FROM concert WHERE Theme = 'Wide Awake') + 3\t----- bird -----\tconcert_singer",
    "11": "SELECT (SELECT Year FROM concert WHERE Theme = 'Wide Awake') - 3 - (SELECT MIN(Year) FROM concert) AS Years_Ago\t----- bird -----\tconcert_singer",
    "12": "SELECT T2.Name, (CAST(T3.Year AS INTEGER) + 20 - T2.Age) AS Age_on_anniversary  FROM singer AS T2  INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID  INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID  WHERE T3.concert_Name = 'Home Visits'\t----- bird -----\tconcert_singer",
    "13": "SELECT T2.Name, (20 + T2.Age) AS Age_on_20th_Anniversary FROM singer AS T2 INNER JOIN singer_in_concert AS T1 ON T2.Singer_ID = T1.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.concert_Name = 'Home Visits'\t----- bird -----\tconcert_singer",
    "14": "SELECT T2.Name, (2025 - T2.Age) AS Age_on_20th_Anniversary FROM singer AS T2 WHERE T2.Singer_ID IN (SELECT T1.Singer_ID FROM singer_in_concert AS T1 INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID INNER JOIN stadium AS T4 ON T3.Stadium_ID = T4.Stadium_ID WHERE T4.Name = 'Stark''s Park') AND T2.Singer_ID IN (SELECT T1.Singer_ID FROM singer_in_concert AS T1 INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.concert_Name = 'Home Visits')\t----- bird -----\tconcert_singer",
    "15": "SELECT T1.Name, (2024 - T1.Age) AS Age FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.concert_Name = 'Home Visits' AND T3.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Stark Park')\t----- bird -----\tconcert_singer",
    "16": "SELECT (SELECT Capacity FROM stadium WHERE Name = 'Balmoor') * 20 + (SELECT Capacity FROM stadium WHERE Name = 'Hampden Park') * 5.5 AS Total_Revenue\t----- bird -----\tconcert_singer",
    "17": "SELECT (SUM(CASE WHEN Name = 'Balmoor' THEN Capacity * 20 ELSE 0 END) + SUM(CASE WHEN Name = 'Hampden Park' THEN Capacity * 5.5 ELSE 0 END)) AS Total_Revenue FROM stadium;\t----- bird -----\tconcert_singer",
    "18": "SELECT (B.Capacity * 20) + (H.Capacity * 5.5) AS Total_Revenue FROM (SELECT Capacity FROM stadium WHERE Name = 'Hampden Park') AS H, (SELECT Capacity FROM stadium WHERE Name = 'Balmoor') AS B;\t----- bird -----\tconcert_singer",
    "19": "SELECT ((SELECT `Capacity` FROM `stadium` WHERE `Name` = 'Balmoor') * 20) + ((2 * (SELECT `Capacity` FROM `stadium` WHERE `Name` = 'Balmoor')) * 5.5) AS total_revenue\t----- bird -----\tconcert_singer",
    "20": "SELECT SUM(CASE WHEN T4.Age >= 43 THEN 355 ELSE 228 END)  FROM singer_in_concert AS T1  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  INNER JOIN stadium AS T3 ON T2.Stadium_ID = T3.Stadium_ID  INNER JOIN singer AS T4 ON T1.Singer_ID = T4.Singer_ID  WHERE T3.Name = 'Somerset Park'\t----- bird -----\tconcert_singer",
    "21": "SELECT SUM(CASE WHEN (2023 - T2.Age) < 1980 THEN 355 ELSE 228 END) FROM singer_in_concert AS T1 INNER JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID INNER JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID INNER JOIN stadium AS T4 ON T3.Stadium_ID = T4.Stadium_ID WHERE T4.Name = 'Somerset Park'\t----- bird -----\tconcert_singer",
    "22": "SELECT SUM(CASE WHEN (2023 - T3.Age) < 43 THEN 355 ELSE 228 END)  FROM singer AS T3  INNER JOIN singer_in_concert AS T1 ON T3.Singer_ID = T1.Singer_ID  INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID  WHERE T2.Stadium_ID IN (SELECT Stadium_ID FROM stadium WHERE Name = 'Somerset Park')\t----- bird -----\tconcert_singer",
    "23": "SELECT SUM(CASE WHEN (STRFTIME('%Y', 'now') - T1.Age) < 1980 THEN 355 ELSE 228 END)  FROM singer AS T1  INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID  INNER JOIN stadium AS T4 ON T3.Stadium_ID = T4.Stadium_ID  WHERE T4.Name = 'Somerset Park'  AND T1.Age = (SELECT Age FROM singer WHERE Name = 'Justin Brown')  AND T1.Age = (SELECT Age + 3 FROM singer WHERE Name = 'John Nizinik')\t----- bird -----\tconcert_singer",
    "24": "SELECT T1.\"Name\", AVG(T1.\"Average\" / T1.\"Capacity\") AS \"Attendance_Rate\", COUNT(T2.\"concert_ID\") AS \"Concert_Count\" FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.\"Stadium_ID\" = T2.\"Stadium_ID\" GROUP BY T1.\"Stadium_ID\" HAVING AVG(T1.\"Average\" / T1.\"Capacity\") = (SELECT MIN(AvgRate) FROM (SELECT AVG(T1.\"Average\" / T1.\"Capacity\") AS AvgRate FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.\"Stadium_ID\" = T2.\"Stadium_ID\" GROUP BY T1.\"Stadium_ID)) OR AVG(T1.\"Average\" / T1.\"Capacity\") = (SELECT MAX(AvgRate) FROM (SELECT AVG(T1.\"Average\" / T1.\"Capacity\") AS AvgRate FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.\"Stadium_ID\" = T2.\"Stadium_ID\" GROUP BY T1.\"Stadium_ID\"))\t----- bird -----\tconcert_singer",
    "25": "SELECT T1.Name, T1.Location, COUNT(T2.concert_ID) AS Concert_Count FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Stadium_ID IN (SELECT Stadium_ID FROM (SELECT T1.Stadium_ID, (SUM(CASE WHEN T2.concert_ID IS NOT NULL THEN T2.Attendance ELSE 0 END) / T1.Capacity) AS Average_Attendance FROM stadium AS T1 LEFT JOIN (SELECT concert_ID, Stadium_ID, COUNT(Singer_ID) AS Attendance FROM singer_in_concert INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY concert_ID, Stadium_ID) AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID) AS AttendanceRates WHERE Average_Attendance = (SELECT MAX(Average_Attendance) FROM (SELECT (SUM(CASE WHEN T2.concert_ID IS NOT NULL THEN T2.Attendance ELSE 0 END) / T1.Capacity) AS Average_Attendance FROM stadium AS T1 LEFT JOIN (SELECT concert_ID, Stadium_ID, COUNT(Singer_ID) AS Attendance FROM singer_in_concert INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY concert_ID, Stadium_ID) AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID) AS MaxAttendance) OR Average_Attendance = (SELECT MIN(Average_Attendance) FROM (SELECT (SUM(CASE WHEN T2.concert_ID IS NOT NULL THEN T2.Attendance ELSE 0 END) / T1.Capacity) AS Average_Attendance FROM stadium AS T1 LEFT JOIN (SELECT concert_ID, Stadium_ID, COUNT(Singer_ID) AS Attendance FROM singer_in_concert INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY concert_ID, Stadium_ID) AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID) AS MinAttendance)) GROUP BY T1.Name, T1.Location;\t----- bird -----\tconcert_singer",
    "26": "SELECT stadium.Name, COUNT(concert.concert_ID) AS concert_count FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Stadium_ID ORDER BY AVG(concert.attendance) / stadium.Capacity ASC LIMIT 1 UNION ALL SELECT stadium.Name, COUNT(concert.concert_ID) AS concert_count FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Stadium_ID ORDER BY AVG(concert.attendance) / stadium.Capacity DESC LIMIT 1\t----- bird -----\tconcert_singer",
    "27": "SELECT T1.Name, COUNT(T2.concert_ID) AS Concert_Count FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Capacity = 10 * (SELECT Capacity FROM stadium WHERE Name = 'Hampden Park') OR T1.Name = 'Hampden Park' GROUP BY T1.Name HAVING COUNT(T2.concert_ID) / T1.Capacity = (SELECT MAX(COUNT(T2.concert_ID)) / T1.Capacity FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name) OR COUNT(T2.concert_ID) / T1.Capacity = (SELECT MIN(COUNT(T2.concert_ID)) / T1.Capacity FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name);\t----- bird -----\tconcert_singer",
    "28": "SELECT T1.concert_ID, T1.concert_Name, (COUNT(CASE WHEN T4.Is_male = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID INNER JOIN singer_in_concert AS T3 ON T1.concert_ID = T3.concert_ID INNER JOIN singer AS T4 ON T3.Singer_ID = T4.Singer_ID WHERE T2.Name = 'Somerset Park' GROUP BY T1.concert_ID, T1.concert_Name\t----- bird -----\tconcert_singer",
    "29": "SELECT T1.concert_ID, T1.concert_Name,         (SELECT COUNT(*) FROM singer AS T3          INNER JOIN singer_in_concert AS T4 ON T3.Singer_ID = T4.Singer_ID          WHERE T4.concert_ID = T1.concert_ID AND T3.Is_male = 'F') * 100.0 /         (SELECT COUNT(*) FROM singer_in_concert AS T4 WHERE T4.concert_ID = T1.concert_ID) AS percentage_female_singers  FROM concert AS T1  INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Name = 'Somerset Park'\t----- bird -----\tconcert_singer",
    "30": "SELECT T1.concert_ID, T1.concert_Name, (COUNT(CASE WHEN T4.Is_male = 'F' THEN 1 END) * 100.0 / COUNT(T2.Singer_ID)) AS female_percentage FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN stadium AS T3 ON T3.Stadium_ID = T1.Stadium_ID INNER JOIN singer AS T4 ON T2.Singer_ID = T4.Singer_ID WHERE T3.Name = 'Somerset Park' GROUP BY T1.concert_ID, T1.concert_Name\t----- bird -----\tconcert_singer",
    "31": "SELECT T1.concert_ID, T1.concert_Name, (SELECT COUNT(*) FROM singer AS T3 INNER JOIN singer_in_concert AS T4 ON T3.Singer_ID = T4.Singer_ID WHERE T4.concert_ID = T1.concert_ID AND T3.Is_male = 'F') * 100.0 / (SELECT COUNT(*) FROM singer_in_concert AS T4 WHERE T4.concert_ID = T1.concert_ID) AS percentage_female_singers FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Name = 'Somerset Park' AND T1.concert_Name = 'Week 2'\t----- bird -----\tconcert_singer",
    "32": "SELECT (COUNT(C.concert_ID) * 100.0 / (SELECT COUNT(*) FROM concert)) AS percentage  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE S.Stadium_ID IN (SELECT Stadium_ID FROM stadium ORDER BY Average * 1.0 / Capacity DESC LIMIT 3)\t----- bird -----\tconcert_singer",
    "33": "SELECT (COUNT(C.concert_ID) * 100.0 / (SELECT COUNT(*) FROM concert)) AS percentage  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE S.Stadium_ID IN (SELECT Stadium_ID FROM stadium ORDER BY (Average * 1.0 / Capacity) DESC LIMIT 3)\t----- bird -----\tconcert_singer",
    "34": "SELECT (COUNT(C.concert_ID) * 100.0 / (SELECT COUNT(*) FROM concert)) AS percentage  FROM concert AS C  INNER JOIN stadium AS S ON C.Stadium_ID = S.Stadium_ID  WHERE S.Stadium_ID IN (SELECT S.Stadium_ID FROM stadium AS S ORDER BY (Average * 1.0 / Capacity) DESC LIMIT 3)\t----- bird -----\tconcert_singer",
    "35": "SELECT (COUNT(T1.concert_ID) * 1.0 / (SELECT COUNT(concert_ID) FROM concert)) * 100 AS percentage  FROM concert AS T1  WHERE Stadium_ID IN (SELECT Stadium_ID                       FROM (SELECT T2.Stadium_ID, COUNT(T1.concert_ID) * 1.0 / T2.Capacity AS average_attendance                             FROM concert AS T1                             INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID                             GROUP BY T1.Stadium_ID                             ORDER BY average_attendance DESC                             LIMIT 3))\t----- bird -----\tconcert_singer",
    "36": "SELECT T1.Location  FROM stadium AS T1  LEFT JOIN concert AS T3 ON T1.Stadium_ID = T3.Stadium_ID  LEFT JOIN singer_in_concert AS T2 ON T3.concert_ID = T2.concert_ID  GROUP BY T1.Stadium_ID  HAVING COUNT(T2.Singer_ID) >= 3 * (SELECT COUNT(T4.Singer_ID) FROM singer_in_concert AS T4 INNER JOIN concert AS T5 ON T4.concert_ID = T5.concert_ID WHERE T5.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Glebe Park'))\t----- bird -----\tconcert_singer",
    "37": "SELECT T1.Name FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID INNER JOIN singer_in_concert AS T3 ON T2.concert_ID = T3.concert_ID GROUP BY T1.Name HAVING COUNT(T3.Singer_ID) >= 3 * (SELECT COUNT(T5.Singer_ID) FROM concert AS T4 INNER JOIN singer_in_concert AS T5 ON T4.concert_ID = T5.concert_ID WHERE T4.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Glebe Park'))\t----- bird -----\tconcert_singer",
    "38": "SELECT Name FROM stadium WHERE Stadium_ID IN (SELECT T3.Stadium_ID FROM (SELECT T2.Stadium_ID, COUNT(DISTINCT T1.Singer_ID) AS singer_count FROM singer_in_concert AS T1 INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T2.Stadium_ID) AS T3 WHERE singer_count >= 3 * (SELECT COUNT(DISTINCT T1.Singer_ID) FROM singer_in_concert AS T1 INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Glebe Park')) AND (SELECT COUNT(DISTINCT T1.Singer_ID) FROM singer_in_concert AS T1 INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Somerset Park')) = (SELECT COUNT(DISTINCT T3.Singer_ID) FROM singer_in_concert AS T3 INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T4.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Balmoor')))\t----- bird -----\tconcert_singer",
    "39": "SELECT T1.Name FROM stadium AS T1 WHERE (SELECT COUNT(T2.Singer_ID) FROM singer_in_concert AS T2 INNER JOIN concert AS T4 ON T2.concert_ID = T4.concert_ID WHERE T4.Stadium_ID = T1.Stadium_ID) >= 3 * (SELECT COUNT(T3.Singer_ID) FROM singer_in_concert AS T3 INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T4.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Glebe Park')) AND EXISTS (SELECT 1 FROM singer_in_concert AS T5 INNER JOIN concert AS T6 ON T5.concert_ID = T6.concert_ID WHERE T6.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Somerset Park') AND T5.Singer_ID IN (SELECT T7.Singer_ID FROM singer_in_concert AS T7 INNER JOIN concert AS T8 ON T7.concert_ID = T8.concert_ID WHERE T8.Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Name = 'Balmoor')))\t----- bird -----\tconcert_singer",
    "40": "SELECT T2.Name FROM stadium AS T2 WHERE (T2.Highest / T2.Capacity) > 2 * (SELECT Highest / Capacity FROM stadium WHERE Name = 'Balmoor')\t----- bird -----\tconcert_singer",
    "41": "SELECT T2.Name FROM stadium AS T2 WHERE (T2.Highest / T2.Capacity) > (2 * (SELECT T1.Highest / T1.Capacity FROM stadium AS T1 WHERE T1.Name = 'Balmoor'))\t----- bird -----\tconcert_singer",
    "42": "SELECT Name FROM stadium WHERE Highest / Capacity > 2 * (SELECT Highest / Capacity FROM stadium WHERE Name = 'Balmoor')\t----- bird -----\tconcert_singer",
    "43": "SELECT T1.Name FROM stadium AS T1 WHERE (T1.Highest / T1.Capacity) > 2 * (SELECT Highest FROM stadium WHERE Name = 'Balmoor') / 5600\t----- bird -----\tconcert_singer",
    "44": "SELECT T1.concert_ID, T1.concert_Name, COUNT(T2.Singer_ID)  FROM concert AS T1  LEFT JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  WHERE T1.Year > '2012'  GROUP BY T1.concert_ID, T1.concert_Name  HAVING COUNT(T2.Singer_ID) > (SELECT COUNT(T3.Singer_ID)                                 FROM singer_in_concert AS T3                                 INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID                                 WHERE T4.Theme = 'Happy Tonight')\t----- bird -----\tconcert_singer",
    "45": "SELECT T1.concert_ID, T1.concert_Name, (COUNT(T2.Singer_ID) * 1.0 / (SELECT COUNT(T3.Singer_ID) FROM singer_in_concert AS T3 INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T4.Theme = 'Happy Tonight')) AS ratio FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T1.Year > '2012' GROUP BY T1.concert_ID, T1.concert_Name HAVING COUNT(T2.Singer_ID) > (SELECT COUNT(T3.Singer_ID) FROM singer_in_concert AS T3 INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T4.Theme = 'Happy Tonight')\t----- bird -----\tconcert_singer",
    "46": "SELECT T1.concert_ID, T1.concert_Name FROM concert AS T1 INNER JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T1.Year > '2012' GROUP BY T1.concert_ID, T1.concert_Name HAVING COUNT(T2.Singer_ID) > (SELECT COUNT(*) FROM singer_in_concert AS T4 WHERE T4.concert_ID = (SELECT concert_ID FROM concert WHERE Theme = 'Happy Tonight')) AND T2.Singer_ID = (SELECT Singer_ID FROM singer WHERE Name = 'Joe Sharp')\t----- bird -----\tconcert_singer",
    "47": "WITH HappyTonightCount AS (     SELECT COUNT(T2.Singer_ID) AS count     FROM singer_in_concert AS T2     INNER JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID     WHERE T3.Theme = 'Happy Tonight' ) SELECT T1.concert_ID, T1.concert_Name,         (SELECT count FROM HappyTonightCount) * 1.0 /         (SELECT COUNT(T4.Singer_ID)          FROM singer_in_concert AS T4          INNER JOIN concert AS T5 ON T4.concert_ID = T5.concert_ID          WHERE T5.Year > '2012' AND T5.concert_ID = T1.concert_ID) AS ratio FROM concert AS T1  WHERE T1.Year > '2012'  AND (SELECT count FROM HappyTonightCount) <        (SELECT COUNT(T4.Singer_ID)         FROM singer_in_concert AS T4         INNER JOIN concert AS T5 ON T4.concert_ID = T5.concert_ID         WHERE T5.Year > '2012' AND T5.concert_ID = T1.concert_ID);\t----- bird -----\tconcert_singer",
    "48": "SELECT T2.Name FROM singer AS T2 WHERE T2.Age > 2 * (SELECT T1.Age FROM singer AS T1 WHERE T1.Song_Name = 'Love')\t----- bird -----\tconcert_singer",
    "49": "SELECT T1.Name FROM singer AS T1 WHERE T1.Age > 2 * (SELECT T2.Age FROM singer AS T2 WHERE T2.Song_Name = 'Love')\t----- bird -----\tconcert_singer",
    "50": "SELECT T1.Name FROM singer AS T1 WHERE T1.Age > 2 * (SELECT MAX(T2.Age) FROM singer AS T2 INNER JOIN singer_in_concert AS T3 ON T2.Singer_ID = T3.Singer_ID INNER JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T4.Year = '2010' AND T4.Theme = 'Love')\t----- bird -----\tconcert_singer",
    "51": "SELECT T2.Name FROM singer AS T2 JOIN singer AS T1 ON T1.Song_Name = 'Love' AND T1.Song_release_year = '2010' WHERE T2.Age > 2 * T1.Age\t----- bird -----\tconcert_singer",
    "52": "SELECT Continent FROM country WHERE GNP / Population = (SELECT MAX(GNP / Population) FROM country WHERE Population > 0)\t----- bird -----\tworld_1",
    "53": "SELECT Continent FROM country WHERE GNP / Population = (SELECT MAX(GNP / Population) FROM country)\t----- bird -----\tworld_1",
    "54": "SELECT Continent FROM country WHERE GNP / Population = (SELECT MAX(GNP / Population) FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Korla'))\t----- bird -----\tworld_1",
    "55": "SELECT Continent FROM country WHERE GNP = (SELECT GNP FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Korla')) AND GNP / Population = (SELECT MAX(GNP / Population) FROM country WHERE GNP = 1982268)\t----- bird -----\tworld_1",
    "56": "SELECT Name, GNP FROM country WHERE IndepYear > 1979 ORDER BY GNP DESC LIMIT 1\t----- bird -----\tworld_1",
    "57": "SELECT Name FROM country WHERE IndepYear > 1979 ORDER BY GNP DESC LIMIT 1\t----- bird -----\tworld_1",
    "58": "SELECT Code, Name, GNP, CASE WHEN Region = 'Oceania' THEN GNP + 1000000 ELSE GNP END AS NewGNP, ((CASE WHEN Region = 'Oceania' THEN GNP + 1000000 ELSE GNP END) - GNP) / GNP AS GrowthRate FROM country WHERE IndepYear > 1979 ORDER BY GrowthRate DESC LIMIT 1\t----- bird -----\tworld_1",
    "59": "SELECT Name, 1000000 / GNP AS GrowthRate FROM country WHERE Region = 'Oceania' AND IndepYear > 1979 ORDER BY GrowthRate DESC LIMIT 1\t----- bird -----\tworld_1",
    "60": "SELECT Highest.Code AS HighestDensityCountry, Highest.Density / Lowest.Density AS DensityRatio FROM (SELECT Code, Population / SurfaceArea AS Density FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND Percentage > 50) ORDER BY Density DESC LIMIT 1) AS Highest, (SELECT Code, Population / SurfaceArea AS Density FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND Percentage > 50) ORDER BY Density ASC LIMIT 1) AS Lowest\t----- bird -----\tworld_1",
    "61": "SELECT (MAX(Density) / MIN(Density)) AS DensityRatio FROM (SELECT `Population` / `SurfaceArea` AS Density FROM `country` WHERE `Code` IN (SELECT `CountryCode` FROM `countrylanguage` WHERE `Language` = 'English' AND `IsOfficial` = 'T'))\t----- bird -----\tworld_1",
    "62": "SELECT (SELECT MAX(Population / SurfaceArea) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND Percentage > 50)) / (SELECT MIN(Population / SurfaceArea) FROM country)\t----- bird -----\tworld_1",
    "63": "SELECT (MAX(Population / SurfaceArea) / MIN(Population / SurfaceArea)) AS DensityRatio FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' AND CountryCode != (SELECT Code FROM country WHERE Name = 'Ireland'))\t----- bird -----\tworld_1",
    "64": "SELECT Name, (GNP - GNPOld) / GNPOld AS IncreaseRate FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Arabic' AND IsOfficial = 'T') ORDER BY IncreaseRate DESC LIMIT 1\t----- bird -----\tworld_1",
    "65": "SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language != 'Arabic' AND T1.GNPOld IS NOT NULL AND T1.GNP IS NOT NULL ORDER BY (T1.GNP - T1.GNPOld) / T1.GNPOld DESC LIMIT 1\t----- bird -----\tworld_1",
    "66": "SELECT T1.Name, ((T1.GNPOld + 9999.0 - T1.GNPOld) / T1.GNPOld) AS GrowthRate FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Arabic' AND IsOfficial = 'T') ORDER BY GrowthRate DESC LIMIT 1\t----- bird -----\tworld_1",
    "67": "SELECT Name, ((GNP + 9999.0 - GNP) / GNP) AS GrowthRate FROM country WHERE Continent = 'South America' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language LIKE '%Arabic%') ORDER BY GrowthRate DESC LIMIT 1\t----- bird -----\tworld_1",
    "68": "SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Region = 'North America') AND Population >= 2 * (SELECT COALESCE(Population, 0) FROM city WHERE Name = 'Kang-won')\t----- bird -----\tworld_1",
    "69": "SELECT Name FROM city WHERE Population >= 2 * (SELECT Population FROM city WHERE Name = 'Kang-won') AND CountryCode IN (SELECT Code FROM country WHERE Region = 'North America')\t----- bird -----\tworld_1",
    "70": "SELECT city.Name FROM city INNER JOIN country ON city.CountryCode = country.Code WHERE city.Population * 1.01 >= 2 * (SELECT Population FROM city WHERE Name = 'Kang-won') AND country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND country.Continent = 'North America'\t----- bird -----\tworld_1",
    "71": "SELECT city.Name FROM city WHERE city.CountryCode IN (SELECT country.Code FROM country WHERE country.Region = 'North America' AND country.Code IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T')) AND city.Population * 1.01 >= 2 * (SELECT Population FROM city WHERE Name = 'Kang-won')\t----- bird -----\tworld_1",
    "72": "SELECT Continent FROM country WHERE GNP >= 1.5 * (SELECT GNP FROM country WHERE Continent = 'Africa')\t----- bird -----\tworld_1",
    "73": "SELECT Continent FROM country WHERE GNP / GNPOld >= 1.5 * (SELECT GNP / GNPOld FROM country WHERE Continent = 'Africa')\t----- bird -----\tworld_1",
    "74": "SELECT Continent FROM country GROUP BY Continent HAVING AVG(GNP * 1.005) >= 1.5 * (SELECT AVG(GNP * 1.005) FROM country WHERE Continent = 'Africa')\t----- bird -----\tworld_1",
    "75": "SELECT Continent FROM country WHERE (SELECT AVG(GNP) * 1.005 FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Czech' AND IsOfficial = 'T')) >= 1.5 * (SELECT AVG(GNP) * 1.005 FROM country WHERE Continent = 'Africa')\t----- bird -----\tworld_1",
    "76": "SELECT Name FROM country WHERE LifeExpectancy >= 1.5 * (SELECT LifeExpectancy FROM country WHERE Name = 'Zambia')\t----- bird -----\tworld_1",
    "77": "SELECT Name FROM country WHERE LifeExpectancy >= 1.5 * (SELECT LifeExpectancy FROM country WHERE Name = 'Zambia')\t----- bird -----\tworld_1",
    "78": "SELECT T2.Name FROM country AS T2 WHERE T2.LifeExpectancy >= 1.5 * (SELECT T1.LifeExpectancy FROM country AS T1 WHERE T1.Name = 'Zambia') AND T2.LifeExpectancy >= 90 AND T2.Code IN (SELECT Code FROM (SELECT Code, GNP / Population AS PerCapitaGNP FROM country ORDER BY PerCapitaGNP DESC LIMIT 20))\t----- bird -----\tworld_1",
    "79": "SELECT T1.Name FROM country AS T1 WHERE T1.LifeExpectancy >= 1.5 * (SELECT T2.LifeExpectancy FROM country AS T2 WHERE T2.Name = 'Zambia') AND T1.Code IN (SELECT T3.Code FROM (SELECT T4.Code, T4.GNP / T4.Population AS PerCapitaGNP FROM country AS T4 ORDER BY PerCapitaGNP DESC LIMIT 20) AS T3)\t----- bird -----\tworld_1",
    "80": "SELECT Code, Name, (GNPOld - GNP) AS GNP_Reduction FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T') ORDER BY GNP_Reduction DESC LIMIT 1\t----- bird -----\tworld_1",
    "81": "SELECT T1.Name FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T') ORDER BY T1.GNP ASC LIMIT 1\t----- bird -----\tworld_1",
    "82": "SELECT T1.Name, (T1.GNP - (SELECT GNP FROM country WHERE Name = 'Aruba')) AS Reduction FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T') ORDER BY Reduction DESC LIMIT 1\t----- bird -----\tworld_1",
    "83": "SELECT T1.Name FROM country AS T1 WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T') ORDER BY T1.GNP ASC LIMIT 1\t----- bird -----\tworld_1",
    "84": "SELECT (SELECT COUNT(*) FROM country WHERE Continent = 'North America' AND GNP < GNPOld) - (SELECT COUNT(*) FROM country WHERE Continent = 'South America' AND GNP < GNPOld) AS Difference\t----- bird -----\tworld_1",
    "85": "SELECT (SELECT COUNT(*) FROM country WHERE Continent = 'North America' AND GNP IS NOT NULL) - (SELECT COUNT(*) FROM country WHERE Continent = 'South America' AND GNP IS NOT NULL) AS Difference\t----- bird -----\tworld_1",
    "86": "SELECT (SELECT COUNT(*) FROM country WHERE Region = 'North America' AND GNP * 1.02 < 0) -         (SELECT COUNT(*) FROM country WHERE Region = 'South America' AND GNP < 0) AS Difference\t----- bird -----\tworld_1",
    "87": "SELECT ABS(     (SELECT COUNT(*) FROM country WHERE Region = 'North America' AND GNP < (SELECT GNP * 1.02 FROM country WHERE Code IN (SELECT Code FROM (SELECT Code, Population FROM country WHERE Region = 'North America' ORDER BY Population DESC LIMIT 2))))     -     (SELECT COUNT(*) FROM country WHERE Region = 'South America' AND GNP < GNP) )\t----- bird -----\tworld_1",
    "88": "SELECT DISTINCT Continent FROM country WHERE (GNP / Population) >= (SELECT MAX(GNP / Population) FROM country WHERE Continent = 'Europe') + 2 AND Continent <> 'Europe'\t----- bird -----\tworld_1",
    "89": "SELECT Continent FROM (SELECT Continent, AVG(GNP / Population) AS PerCapitaGNP FROM country GROUP BY Continent) AS ContinentGNP WHERE PerCapitaGNP > (SELECT AVG(GNP / Population) FROM country WHERE Continent = 'Europe') + 2\t----- bird -----\tworld_1",
    "90": "SELECT continent, (SUM((GNP * 0.98) / Population) - SUM(GNP / Population)) AS growth_rate FROM country WHERE Code IN (SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3) GROUP BY continent HAVING growth_rate >= (SELECT (SUM(GNP / Population) * 0.02) FROM country WHERE Continent = 'Europe') * 2\t----- bird -----\tworld_1",
    "91": "SELECT Continent, AVG((GNP * 0.98) / Population) AS AvgPerCapitaGNP FROM country WHERE Code IN (SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3) GROUP BY Continent HAVING AvgPerCapitaGNP > (SELECT AVG(GNP / Population) FROM country WHERE Continent = 'Europe') + 2\t----- bird -----\tworld_1",
    "92": "SELECT Name, GNPOld, GNP, GNP * (1 + (GNP - GNPOld) / GNPOld) AS FutureGNP FROM country WHERE Continent = 'Asia'\t----- bird -----\tworld_1",
    "93": "SELECT Name, GNP, GNPOld, GNP * (1 + 0.05) AS Future_GNP FROM country WHERE UPPER(Region) = 'ASIA'\t----- bird -----\tworld_1",
    "94": "SELECT T1.Name, T1.GNP, T1.GNPOld, T1.GNP * (1000000.0 / (SELECT GNP FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese' LIMIT 1))) AS FutureGNP FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia'\t----- bird -----\tworld_1",
    "95": "SELECT T1.Name, T1.GNP, T1.GNPOld, T1.GNP * (1 + 0.05) AS Future_GNP FROM country AS T1 LEFT JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode AND T2.Language = 'Chinese' AND T2.IsOfficial = 'T' WHERE T1.Region = 'Asia'\t----- bird -----\tworld_1",
    "96": "SELECT Population * (1 + 0.004) FROM country WHERE Name = 'United Kingdom';\t----- bird -----\tworld_1",
    "97": "SELECT Population * (1 + 0.004) FROM country WHERE Name = 'United Kingdom';\t----- bird -----\tworld_1",
    "98": "SELECT 103000 * (1 + 0.004) AS ProjectedPopulation\t----- bird -----\tworld_1",
    "99": "SELECT Population * (1 + 0.004) FROM country WHERE Name = 'United Kingdom'\t----- bird -----\tworld_1",
    "100": "SELECT IndepYear + LifeExpectancy AS expected_year_of_death FROM country WHERE Name = 'Zambia'\t----- bird -----\tworld_1",
    "101": "SELECT (IndepYear + LifeExpectancy) AS PredictedYearOfDeath FROM country WHERE LocalName = 'Zambia'\t----- bird -----\tworld_1",
    "102": "SELECT (1964 + (SELECT LifeExpectancy + 10 FROM country WHERE (GNP / Population) > (SELECT AVG(GNP / Population) FROM country WHERE Continent = 'Europe') AND Name = 'Zambia')) AS ExpectedYearOfDeath\t----- bird -----\tworld_1",
    "103": "SELECT      CASE          WHEN `GNP` / `Population` > (SELECT AVG(`GNP` / `Population`) FROM `country` WHERE `Region` = 'Europe')          THEN 1964 + (`LifeExpectancy` + 10)          ELSE 1964 + `LifeExpectancy`      END AS predicted_year_of_death  FROM `country`  WHERE `IndepYear` = 1964\t----- bird -----\tworld_1"
}
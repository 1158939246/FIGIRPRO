{
    "0": "SELECT MAX(`Free Meal Count (K-12)` / `Enrollment (K-12)`) FROM `frpm` WHERE `District Name` = 'Alameda County Office of Education'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS eligible_free_rate FROM frpm WHERE `Educational Option Type` = 'Continuation School' ORDER BY eligible_free_rate ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T2.MailZip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Charter School (Y/N)\" = 1 AND T2.District = 'Fresno County Office of Education'\t----- bird -----\tcalifornia_schools",
    "3": "SELECT T1.MailStreet FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"FRPM Count (K-12)\" = (SELECT MAX(\"FRPM Count (K-12)\") FROM frpm)\t----- bird -----\tcalifornia_schools",
    "4": "SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Charter School (Y/N)\" = 1 AND T1.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 500 AND T1.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT Phone FROM schools WHERE CDSCode = (SELECT CDSCode FROM satscores WHERE NumGE1500 > 0 ORDER BY NumTstTakr DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "8": "SELECT SUM(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM frpm WHERE \"Free Meal Count (K-12)\" = (SELECT MAX(\"Free Meal Count (K-12)\") FROM frpm))\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath > 560 AND T1.\"Charter Funding Type\" = 'Directly funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT `FRPM Count (Ages 5-17)` FROM `frpm` WHERE `School Code` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrRead` DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "11": "SELECT T2.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE (T1.\"Enrollment (K-12)\" + T1.\"Enrollment (Ages 5-17)\") > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE (NumGE1500 / NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE ss.NumTstTakr > 0 ORDER BY (ss.NumGE1500 * 1.0 / ss.NumTstTakr) DESC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT CDSCode, `Enrollment (Ages 5-17)` FROM frpm ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T1.dname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' ORDER BY T1.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM satscores WHERE cname = 'Alameda' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T1.CharterNum, AVG(T2.AvgScrWrite) AS AverageScore FROM satscores AS T2 INNER JOIN schools AS T1 ON T2.cds = T1.CDSCode WHERE T2.AvgScrWrite > 499 AND T1.CharterNum IS NOT NULL GROUP BY T1.CharterNum ORDER BY AverageScore DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.CDSCode IN (SELECT CDSCode FROM frpm WHERE \"Charter Funding Type\" = 'Directly funded') AND T2.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`School Code` = T2.`CDSCode` WHERE T1.`Free Meal Count (K-12)` > 500 AND T1.`FRPM Count (K-12)` < 700 AND T2.`City` = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname FROM satscores WHERE LOWER(dname) = 'contra costa' ORDER BY NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT frpm.`School Name`, schools.`Street` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T2.sname FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)` > 0.1 AND T1.`Enrollment (K-12)` > 0 AND T2.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT T2.\"School Name\", T2.FundingType FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.City = 'Riverside' GROUP BY T2.\"School Name\", T2.FundingType HAVING SUM(T1.AvgScrMath) / COUNT(T2.CDSCode) > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T2.\"School Name\", T2.Street, T2.City, T2.State, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"FRPM Count (Ages 5-17)\" > 800 AND T2.City = 'Monterey' AND T2.\"School Type\" LIKE '%High School%'\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T2.School, AVG(T1.AvgScrWrite) AS AverageWritingScore, T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.OpenDate > '1991-12-31' OR T2.ClosedDate < '2000-01-01' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "28": "SELECT `School Name`, `DOC` FROM `frpm` WHERE (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM `frpm` WHERE `FundingType` = 'Locally funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T1.OpenDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.GSoffered = 'K-12' ORDER BY T2.\"Enrollment (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT T2.City, T1.\"Enrollment (K-12)\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.\"Enrollment (K-12)\" ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS `Eligible Free Rate` FROM `frpm` WHERE `Enrollment (K-12)` IS NOT NULL ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "32": "SELECT (\"FRPM Count (K-12)\" / \"Enrollment (K-12)\") AS meal_rate FROM schools WHERE SOC = '66' ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT T1.Website, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`FRPM Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (f.`Free Meal Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) AS free_rate FROM frpm AS f INNER JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE s.AdmFName1 = 'Kacey' AND s.AdmLName1 = 'Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"School Code\" = T2.CDSCode WHERE T1.\"Charter School (Y/N)\" = 1 ORDER BY T1.\"Enrollment (K-12)\" ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1, AdmLName1 FROM schools WHERE CDSCode = (SELECT cds FROM satscores WHERE NumGE1500 IS NOT NULL ORDER BY NumGE1500 DESC LIMIT 1)\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State  FROM satscores AS ss  INNER JOIN schools AS s ON ss.cds = s.CDSCode  WHERE ss.NumTstTakr > 0  ORDER BY (ss.NumGE1500 * 1.0 / ss.NumTstTakr) ASC  LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T1.Website FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.cname = 'Los Angeles' AND T2.NumTstTakr BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE STRFTIME('%Y', T2.OpenDate) = '1980' AND T2.City = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE ss.dname = 'Fresno Unified' ORDER BY ss.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "41": "SELECT [School Name] FROM (SELECT T2.[School Name], ROW_NUMBER() OVER (PARTITION BY T2.County ORDER BY T1.AvgScrRead DESC) AS rn FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F') AS RankedSchools WHERE rn <= 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "43": "WITH AverageScores AS (     SELECT AvgScrMath, AvgScrRead, AvgScrWrite, dname, (AvgScrMath + AvgScrRead + AvgScrWrite) AS TotalAvgScore     FROM satscores ) SELECT AvgScrMath, dname FROM AverageScores WHERE TotalAvgScore = (SELECT MIN(TotalAvgScore) FROM AverageScores);\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(s.AvgScrWrite), sch.City FROM satscores AS s INNER JOIN schools AS sch ON s.cds = sch.CDSCode WHERE s.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T2.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.\"School Name\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"District Code\" = 31 ORDER BY T1.\"Enrollment (K-12)\" DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 FROM schools WHERE STRFTIME('%Y', OpenDate) = '1980' AND DOC = 52;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (SELECT COUNT(*) FROM schools WHERE DOC = 54 AND County = 'Orange') * 1.0 / (SELECT COUNT(*) FROM schools WHERE DOC = 52 AND County = 'Orange') AS ratio\t----- bird -----\tcalifornia_schools",
    "49": "SELECT `School`, `ClosedDate`  FROM `schools`  WHERE `County` = (SELECT `County`                    FROM `schools`                    WHERE `StatusType` = 'Closed'                    GROUP BY `County`                    ORDER BY COUNT(*) DESC                    LIMIT 1)  AND `StatusType` = 'Closed';\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T1.MailStreet, T2.sname  FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  ORDER BY T2.AvgScrMath DESC  LIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "51": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrRead + T2.AvgScrMath + T2.AvgScrWrite >= 1500 AND T1.MailCity = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT T1.School, T1.MailZip FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE LOWER(T1.AdmFName1) = 'avetik' AND LOWER(T1.AdmLName1) = 'atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (COUNT(CASE WHEN County = 'Colusa' THEN 1 END) * 1.0 / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END)) AS ratio FROM schools WHERE MailState = 'CA'\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE State = 'CA' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools WHERE CDSCode = (SELECT CDSCode FROM satscores ORDER BY AvgScrWrite DESC LIMIT 1 OFFSET 332)\t----- bird -----\tcalifornia_schools",
    "58": "SELECT T2.School Name, T2.Phone, T2.Ext FROM schools AS T2 INNER JOIN frpm AS T1 ON T2.CDSCode = T1.CDSCode WHERE T1.MailZip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE CDSCode IN (SELECT CDSCode FROM frpm WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez'))\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND DOC = 52 AND City = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND County = 'Los Angeles' AND (\"Free Meal Count (K-12)\" * 100 / \"Enrollment (K-12)\") < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, School, City FROM schools WHERE Charter = 1 AND CDSCode IN (SELECT CDSCode FROM frpm WHERE `Charter School Number` = '00D2')\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SUM(CASE WHEN F.`Charter Funding Type` = 'Locally funded' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM `schools` AS S INNER JOIN `frpm` AS F ON S.CDSCode = F.CDSCode WHERE S.`County` = 'Santa Clara'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND T2.`Charter Funding Type` = 'Directly funded' AND T1.County = 'Stanislaus'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE STRFTIME('%Y', ClosedDate) = '1989' AND MailCity = 'San Francisco' AND DOCType = 'Community College District'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT T2.cname, COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.SOC = 11 AND T1.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY T2.cname ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND `School Type` = 'District Community Day Schools';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT \"District Code\" FROM schools WHERE Magnet = 0 AND City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM `frpm` WHERE `School Type` = 'State Special Schools' AND `District Name` = 'Fremont' AND `Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `FRPM Count (Ages 5-17)` FROM `frpm` WHERE `School Type` = 'Youth Authority School' AND `MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT `Low Grade` FROM `frpm` WHERE `CDSCode` = '0613360' AND `Educational Option Type` = 'District Special Education Consortia School';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T2.\"EILName\", T2.\"School\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"District Code\" = T2.\"CDSCode\" WHERE T1.\"NSLP Provision Status\" = 'Breakfast Provision 2' AND T1.\"County Code\" = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT City FROM schools WHERE EILCode = 'HS' AND \"NSLP Provision Status\" = 'Lunch Provision 2' AND \"Low Grade\" = '9' AND \"High Grade\" = '12' AND County = 'Merced'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T2.School, (T1.\"FRPM Count (Ages 5-17)\" / T1.\"Enrollment (Ages 5-17)\") * 100 AS \"Percent Eligible FRPM\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.\"Low Grade\" = 'K' AND T1.\"High Grade\" IN ('9', '9th') AND LOWER(T2.County) = 'los angeles'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) FROM schools WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT `School`, `School Type`, `Latitude` FROM `schools` WHERE `Latitude` = (SELECT MAX(`Latitude`) FROM `schools`)\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, \"Low Grade\", School FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered FROM schools WHERE ABS(Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools);\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(*) AS SchoolsWithMultipleProvisionTypes, City, COUNT(*) AS SchoolsInCity FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE Magnet = 1 AND GSserved = 'K-8' AND \"NSLP Provision Status\" = 'Multiple Provision Types' GROUP BY City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, District, COUNT(AdmFName1) AS name_count FROM schools GROUP BY AdmFName1, District ORDER BY name_count DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT `District Code`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) * 100 AS `Percent Eligible Free K-12` FROM `frpm` WHERE `CDSCode` IN (SELECT `CDSCode` FROM `schools` WHERE `AdmFName1` = 'Alusine')\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.\"Charter School Number\" = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54)\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 > 0 ORDER BY T1.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_1995, AVG(A13) AS avg_1996 FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' GROUP BY T1.district_id HAVING AVG(T1.A11) > 6000 AND AVG(T1.A11) < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT A.account_id, (MAX(D.A11) - MIN(D.A11)) AS gap  FROM account AS A  JOIN client AS C ON A.account_id = C.client_id  JOIN district AS D ON C.district_id = D.district_id  WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')  GROUP BY A.account_id;\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.birth_date = (SELECT MIN(birth_date) FROM client) AND T2.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'DISPONENT' AND T2.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT l.account_id FROM loan l INNER JOIN account a ON l.account_id = a.account_id WHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' AND l.amount = (SELECT MIN(amount) FROM loan WHERE date BETWEEN '1997-01-01' AND '1997-12-31') AND a.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993' AND T1.amount = (SELECT MAX(T3.amount) FROM loan AS T3 WHERE T3.duration > 12)\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.district_id IN (SELECT district_id FROM district WHERE A2 = 'Sokolov')\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date = (SELECT MIN(date) FROM account WHERE date LIKE '1995%')\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.balance > 3000\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT date FROM account WHERE account_id = (SELECT account_id FROM trans WHERE amount = 840 AND date = '1998-10-14')\t----- bird -----\tfinancial",
    "105": "SELECT T2.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T4.amount) FROM trans AS T4 INNER JOIN account AS T3 ON T4.account_id = T3.account_id INNER JOIN disp AS T2 ON T3.account_id = T2.account_id INNER JOIN card AS T1 ON T2.disp_id = T1.disp_id WHERE T1.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT T1.gender FROM client AS T1  INNER JOIN account AS T2 ON T1.district_id = T2.district_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T3.district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1)  ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "108": "WITH MaxLoan AS (     SELECT account_id FROM loan WHERE amount = (SELECT MAX(amount) FROM loan) ), FirstTransaction AS (     SELECT amount FROM trans WHERE account_id = (SELECT account_id FROM MaxLoan) AND date > (SELECT MIN(date) FROM account WHERE account_id = (SELECT account_id FROM MaxLoan)) ORDER BY date ASC LIMIT 1 ) SELECT amount FROM FirstTransaction;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik')\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT T3.A2 FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT T2.birth_date FROM loan AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id WHERE T1.amount = 98832 AND T1.date = '1996-01-03'\t----- bird -----\tfinancial",
    "114": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague') ORDER BY T2.date ASC LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN T1.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS male_percentage  FROM client AS T1  INNER JOIN account AS T2 ON T1.district_id = T2.district_id  WHERE T2.district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)\t----- bird -----\tfinancial",
    "116": "SELECT ((balance_1998 - balance_1993) / balance_1993) * 100 AS increase_rate  FROM (     SELECT          (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1993-03-22') AS balance_1993,         (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1998-12-27') AS balance_1998 ) AS balances\t----- bird -----\tfinancial",
    "117": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT (SUM(CASE WHEN status = 'C' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage FROM loan WHERE amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id IN (SELECT district_id FROM district WHERE A3 = 'east Bohemia') AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = '4990'\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T2.A2, T2.A3 FROM loan AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T2 ON T3.district_id = T2.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T2.A2 AS district, T2.A11 AS average_salary FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT D.A3, ((D.A13 - D.A12) / D.A12) * 100 AS unemployment_increment FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE L.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account WHERE STRFTIME('%Y', date) = '1993')) AS percentage FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Decin' AND STRFTIME('%Y', A.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT D.A2, COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS D ON T3.district_id = D.district_id WHERE T3.gender = 'F' GROUP BY D.district_id ORDER BY COUNT(T1.account_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT D.A2, SUM(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS D ON T2.district_id = D.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' GROUP BY D.A2 ORDER BY SUM(T1.amount) DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id LEFT JOIN card AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'South Bohemia' AND T3.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT D.A3 FROM district AS D INNER JOIN account AS A ON D.district_id = A.district_id INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.status IN ('C', 'D') GROUP BY D.A3 ORDER BY SUM(L.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.account_id = T3.district_id WHERE T3.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T2.district_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A13 IS NOT NULL ORDER BY T1.A13 DESC\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district ORDER BY A16 DESC LIMIT 1);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT A.account_id) FROM trans AS T INNER JOIN account AS A ON T.account_id = A.account_id WHERE T.balance < 0 AND T.operation = 'VYBER KARTOU' AND A.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status IN ('C', 'D') AND T1.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T2.district_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount > 10000 AND STRFTIME('%Y', T1.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND STRFTIME('%Y', date) = '2021';\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT account_id FROM account WHERE account_id IN (SELECT account_id FROM trans WHERE amount < (SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '1998') AND STRFTIME('%Y', date) = '1998' AND operation = 'VYBER KARTOU')\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN card AS T4 ON T2.account_id = T4.account_id INNER JOIN loan AS T5 ON T3.account_id = T5.account_id WHERE T1.gender = 'F' AND T4.card_id IS NOT NULL AND T5.loan_id IS NOT NULL\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T3.account_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' AND T3.district_id IN (SELECT district_id FROM district WHERE A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A2 = 'Tabor' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 > 8000 AND T3.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT A.account_id) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE D.A3 = 'North Bohemia' AND T.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE date >= '1997-01-01')\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'classic' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 END) * 100.0 / COUNT(card_id)) AS percent_gold FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT T2.client_id FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT T2.A15 FROM district AS T2 INNER JOIN account AS T1 ON T1.district_id = T2.district_id WHERE T1.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM \"order\" WHERE order_id = 33333)\t----- bird -----\tfinancial",
    "159": "SELECT * FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE A.frequency = 'POPLATEK TYDNE' AND L.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT D.district_id, COUNT(A.account_id) FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN district AS D ON A.district_id = D.district_id WHERE L.status = 'A' GROUP BY D.district_id ORDER BY COUNT(A.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T3.order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'junior' AND T2.issued >= '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(CASE WHEN gender = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)\t----- bird -----\tfinancial",
    "169": "SELECT ((SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) / SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT SUM(A16) FROM district WHERE A3 = 'North Bohemia') - (SELECT SUM(A16) FROM district WHERE A3 = 'East Bohemia') AS crime_difference\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE (account_id = 1 OR account_id = 10) AND type IN ('OWNER', 'DISPONENT');\t----- bird -----\tfinancial",
    "173": "WITH statement_requests AS (     SELECT COUNT(*) AS request_count FROM `order` WHERE `account_id` = 3 AND `k_symbol` = 'SLUZBY' ), debit_aim AS (     SELECT `k_symbol` FROM `order` WHERE `amount` = 3539 ) SELECT request_count, (SELECT k_symbol FROM debit_aim) AS debit_aim FROM statement_requests;\t----- bird -----\tfinancial",
    "174": "SELECT STRFTIME('%Y', birth_date) FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT amount, status FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 992);\t----- bird -----\tfinancial",
    "177": "SELECT SUM(T1.balance) AS account_sum, T2.gender  FROM trans AS T1  INNER JOIN account AS T3 ON T1.account_id = T3.account_id  INNER JOIN disp AS T4 ON T3.account_id = T4.account_id  INNER JOIN client AS T2 ON T4.client_id = T2.client_id  WHERE T1.trans_id = 851 AND T4.account_id = T3.account_id\t----- bird -----\tfinancial",
    "178": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T1.amount) FROM trans AS T1 WHERE T1.account_id IN (SELECT T2.account_id FROM disp AS T2 WHERE T2.client_id = 617) AND T1.date LIKE '1998%'\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T3.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(*) FROM client AS C INNER JOIN account AS A ON C.district_id = A.district_id INNER JOIN \"order\" AS O ON A.account_id = O.account_id WHERE C.gender = 'M' AND C.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND O.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date > '1996-12-31' AND T2.A2 = 'Beroun'\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT (COUNT(CASE WHEN C.gender = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS proportion FROM client AS C INNER JOIN disp AS D ON C.client_id = D.client_id INNER JOIN account AS A ON D.account_id = A.account_id WHERE A.district_id IN (SELECT district_id FROM district WHERE A3 = 'Prague')\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(DISTINCT C.client_id) * 100.0 / (SELECT COUNT(DISTINCT C.client_id) FROM client AS C INNER JOIN account AS A ON C.district_id = A.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE T.k_symbol = 'POPLATEK TYDNE')) AS percentage FROM client AS C INNER JOIN account AS A ON C.district_id = A.district_id INNER JOIN trans AS T ON A.account_id = T.account_id WHERE C.gender = 'M' AND T.k_symbol = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT DISTINCT A.account_id  FROM account AS A  INNER JOIN loan AS L ON A.account_id = L.account_id  WHERE A.date < '1997-01-01' AND L.duration > 24 AND L.amount = (SELECT MIN(amount) FROM loan WHERE duration > 24);\t----- bird -----\tfinancial",
    "189": "SELECT A.account_id FROM account AS A INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id INNER JOIN district AS D2 ON A.district_id = D2.district_id WHERE C.gender = 'F' AND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND D2.A11 = (SELECT MIN(A11) FROM district)\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration = 24 AND T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.status IN ('C', 'D') AND T3.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.birth_date) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.account_id = T3.disp_id WHERE T3.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(o_count) FROM (SELECT COUNT(*) AS o_count FROM atom WHERE element = 'o' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-')) GROUP BY molecule_id)\t----- bird -----\ttoxicology",
    "198": "SELECT SUM(CASE WHEN bond.bond_type = '-' THEN 1 ELSE 0 END) * 1.0 / COUNT(atom.atom_id) FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.atom_id)) * 100 AS percentage_of_carbon FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '='\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT T4.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T4 ON T2.atom_id = T4.atom_id WHERE T1.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T4.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T4 ON T2.atom_id = T4.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "208": "SELECT M.label FROM atom AS A INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE A.element = 'h' GROUP BY M.label ORDER BY COUNT(M.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'cl'\t----- bird -----\ttoxicology",
    "210": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element, COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20') OR (T2.atom_id = 'TR004_20' AND T2.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T1.label FROM molecule AS T1 WHERE T1.molecule_id NOT IN (SELECT T2.molecule_id FROM atom AS T2 WHERE T2.element = 'sn')\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT (COUNT(DISTINCT T1.molecule_id) - SUM(CASE WHEN T2.element = 'f' THEN 1 ELSE 0 END)) * 100.0 / COUNT(DISTINCT T1.molecule_id) AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT (SUM(CASE WHEN bond.bond_type = '#' AND molecule.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(CASE WHEN bond.bond_type = '#' THEN 1 ELSE NULL END)) AS percent FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id\t----- bird -----\ttoxicology",
    "220": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR000' ORDER BY T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (COUNT(CASE WHEN label = '+' THEN 1 END) - COUNT(CASE WHEN label = '-' THEN 1 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' ORDER BY T2.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id)) AS percent FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule_id)), 3) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND((SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(atom_id), 4) AS percent FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = '-' AND T2.bond_type = '-' ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id ASC LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR009' AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT B.bond_type, C.atom_id, C.atom_id2 FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(bond_id) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T1.atom_id, 7, 2) BETWEEN '21' AND '25' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT T1.bond_id  FROM bond AS T1  INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id  WHERE T3.element IN ('p', 'n')  GROUP BY T1.bond_id  HAVING COUNT(DISTINCT T3.element) = 2\t----- bird -----\ttoxicology",
    "244": "SELECT T1.label FROM molecule AS T1 LEFT JOIN (SELECT molecule_id FROM bond WHERE bond_type = ' = ' GROUP BY molecule_id ORDER BY COUNT(*) DESC LIMIT 1) AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "245": "SELECT COUNT(T1.bond_id) * 1.0 / COUNT(T2.atom_id) FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id WHERE T2.element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T1.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE SUBSTR(T1.atom_id, 7, 2) + 0 = 45\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT T3.atom_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.molecule_id = 'TR041' AND T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR144_8_19')\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id, COUNT(T2.bond_id) AS double_bond_count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id IN (SELECT atom_id FROM atom WHERE element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "WITH MostCommon AS (     SELECT COUNT(T2.atom_id) AS atom_count     FROM connected AS T1     INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id     GROUP BY T2.element     ORDER BY COUNT(T2.atom_id) DESC     LIMIT 1 ) SELECT (COUNT(T1.bond_id) / (SELECT atom_count FROM MostCommon)) * 100 AS percentage FROM bond AS T1;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id)), 5) AS proportion FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'sn'\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T3.element) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (SUM(CASE WHEN T3.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(T3.atom_id)) AS percent  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id  WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T3.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(T2.label) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "271": "SELECT COUNT(DISTINCT T3.element) = 2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR001_1_8' AND (T3.element = 'cl' OR T3.element = 'c')\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT (SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) / COUNT(DISTINCT T2.molecule_id)) * 100 AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT element FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = '='\t----- bird -----\ttoxicology",
    "276": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND substr(T1.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "282": "SELECT (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS ratio, m.label  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE a.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c'\t----- bird -----\ttoxicology",
    "285": "SELECT element FROM atom WHERE atom_id IN ('TR001_10', 'TR001_11');\t----- bird -----\ttoxicology",
    "286": "SELECT (SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT T1.molecule_id)) AS percent FROM molecule AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id)) AS percent FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id LIKE 'TR0%' AND CAST(SUBSTR(T2.molecule_id, 3, 3) AS INTEGER) BETWEEN 10 AND 50 AND T1.element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "296": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT (SUM(CASE WHEN T2.label = '+' AND T1.element = 'h' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT T2.molecule_id)) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h'\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id, element FROM atom WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' AND T1.bond_type = '=' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T3.element AS first_atom_element, T2.atom_id2 AS connected_atom_id, T4.element AS connected_element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT T1.molecule_id, T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id OR T2.atom_id2 = T3.atom_id WHERE T3.element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id)  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = ' = ' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.element != 's' AND T3.bond_type != ' = '\t----- bird -----\ttoxicology",
    "312": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_2_4')\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'c' AND T1.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT SUM(CASE WHEN T1.label = '+' AND T2.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT T1.molecule_id) AS percentage FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4')\t----- bird -----\ttoxicology",
    "320": "SELECT T3.bond_type FROM connected AS T1 INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('TR000_2', 'TR000_4')\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (SUM(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) / COUNT(bond_id)) * 100 AS percentage FROM bond\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id INNER JOIN molecule AS T3 ON T4.molecule_id = T3.molecule_id WHERE T1.element = 's' AND TRIM(T4.bond_type) = '='\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T2.element FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id WHERE T1.bond_type = '=' AND T1.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id HAVING COUNT(T2.molecule_id) = (SELECT MAX(atom_count) FROM (SELECT COUNT(T2.molecule_id) AS atom_count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id))\t----- bird -----\ttoxicology",
    "330": "SELECT (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) / COUNT(DISTINCT b.molecule_id)) * 100.0  FROM bond AS b  INNER JOIN atom AS a ON b.molecule_id = a.molecule_id  INNER JOIN molecule AS m ON b.molecule_id = m.molecule_id  WHERE a.element = 'h' AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010'\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_type = ' = ' AND T3.element = 'o'\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'c' AND T3.bond_type = ' = ' AND T1.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards)\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.types = 'Artifact' AND T2.side IS NULL AND T1.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "348": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT T2.name, T2.artist, T2.isPromo  FROM cards AS T2  INNER JOIN rulings AS T1 ON T1.uuid = T2.uuid  GROUP BY T2.uuid  HAVING COUNT(T1.uuid) = (SELECT MAX(ruling_count) FROM (SELECT COUNT(uuid) AS ruling_count FROM rulings GROUP BY uuid))\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT name FROM foreign_data WHERE language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'restricted' AND T2.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Condemn')\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'restricted' AND T2.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT T1.status FROM legalities AS T1 WHERE T1.uuid = (SELECT T2.uuid FROM cards AS T2 WHERE T2.name = 'Cloudchaser Eagle')\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(CASE WHEN F.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE C.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.uuid, T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T3.language FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT T2.text FROM rulings AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.uuid), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = '10E' AND T1.convertedManaCost = 5 AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT T1.colorIndicator, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B' AND T2.language IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 WHERE T1.rarity = 'uncommon' LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(manaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT subtypes, supertypes FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT id, (SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM cards GROUP BY id\t----- bird -----\tcard_games",
    "403": "SELECT name, (SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM foreign_data GROUP BY name\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'legal' AND T1.types LIKE '%Creature%'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM foreign_data WHERE language = 'German' AND type IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'French' AND T2.type LIKE '%Creature%' AND T2.layout = 'normal' AND T2.borderColor = 'black' AND T2.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(CASE WHEN FD.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS C LEFT JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.power IS NULL OR C.power = '*'\t----- bird -----\tcard_games",
    "417": "SELECT (SUM(CASE WHEN T2.type = 'expansion' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM set_translations AS T1  INNER JOIN sets AS T2 ON T1.setCode = T2.code  WHERE T1.language = 'Japanese'\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT (SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END)) AS proportion FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT T3.language FROM set_translations AS T3 INNER JOIN sets AS T2 ON T3.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.code = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.mtgoCode WHERE T2.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (COUNT(CASE WHEN T1.isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id), id FROM cards WHERE borderColor = 'black' GROUP BY id;\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id), id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id;\t----- bird -----\tcard_games",
    "437": "SELECT uuid, name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE LOWER(name) = LOWER('A Pedra Fellwar'))\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT T1.name, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN convertedManaCost = 10 THEN 1 END) * 100.0 / COUNT(convertedManaCost)) AS percentage FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE name = 'Abyssal Horror')\t----- bird -----\tcard_games",
    "447": "SELECT setCode FROM sets WHERE type = 'commander'\t----- bird -----\tcard_games",
    "448": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT T1.language, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > '0';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT T3.translation FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations WHERE set_translations.uuid IN (SELECT uuid FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS(SELECT 1 FROM foreign_data WHERE language = 'Korean' AND uuid IN (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen'))\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Eighth Edition' AND T1.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "469": "SELECT EXISTS(SELECT 1 FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.mtgoCode IS NOT NULL);\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "473": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.code = T2.setCode INNER JOIN cards AS T3 ON T2.uuid = T3.uuid WHERE T3.name = 'Adarkar Valkyrie' AND T1.isForeignOnly = 1\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost > 5 AND T2.name = 'Coldsnap' AND (T1.power IS NULL OR T1.power = '*')\t----- bird -----\tcard_games",
    "480": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'German' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "483": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "484": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' AND T1.convertedManaCost = (SELECT MAX(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap')\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce'\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM cards AS c  INNER JOIN sets AS s ON c.setCode = s.code  WHERE s.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT type FROM sets WHERE name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT T1.text, CASE WHEN T2.hasContentWarning = 1 THEN 'Yes' ELSE 'No' END AS missing_or_degraded FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT T2.name FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN cards AS T3 ON T2.code = T3.setCode WHERE T1.language = 'French' AND T3.name = 'Tendo Ice Bridge'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T1.translation) FROM set_translations AS T1 WHERE T1.setCode IN (SELECT T2.code FROM sets AS T2 WHERE T2.name = 'Tenth Edition') AND T1.translation IS NOT NULL\t----- bird -----\tcard_games",
    "500": "SELECT T3.translation FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T2.setCode = T3.setCode WHERE T1.text = 'Fellwar Stone' AND T3.language = 'Japanese'\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero''s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT s.releaseDate FROM sets AS s INNER JOIN set_translations AS st ON s.code = st.setCode WHERE st.translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT T1.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Chinese Simplified' AND T2.name = 'Mirrodin'\t----- bird -----\tcard_games",
    "506": "SELECT (SUM(CASE WHEN c.isNonFoilOnly = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN st.language = 'Japanese' THEN 1 ELSE 0 END), 0)) AS percentage FROM set_translations AS st INNER JOIN cards AS c ON st.setCode = c.setCode WHERE st.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN C.isOnlineOnly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(F.language)) AS percentage FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE F.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT T1.name, T1.manaCost FROM cards AS T1 ORDER BY T1.manaCost DESC LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT MIN(T1.originalReleaseDate), T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'legal' AND T1.originalReleaseDate = (SELECT MIN(originalReleaseDate) FROM cards WHERE rarity = 'mythic')\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(T1.uuid) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Volkan Ba\u01f5a' AND T1.language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, GROUP_CONCAT(T2.name)  FROM legalities AS T1  INNER JOIN cards AS T2 ON T1.uuid = T2.uuid  WHERE T1.status = 'Banned'  GROUP BY T1.format  HAVING COUNT(T1.status) = (SELECT MAX(banned_count)                              FROM (SELECT COUNT(status) AS banned_count                                    FROM legalities                                    WHERE status = 'Banned'                                    GROUP BY format))\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond')\t----- bird -----\tcard_games",
    "520": "SELECT C.artist, L.format FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.artist = (SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1)\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND T1.hasContentWarning = 1\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "WITH yearly_counts AS (     SELECT COUNT(id) AS sets_per_year     FROM sets     WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY STRFTIME('%Y', releaseDate) ), common_language AS (     SELECT language     FROM set_translations     WHERE setCode IN (SELECT code FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31')     GROUP BY language     ORDER BY COUNT(language) DESC     LIMIT 1 ) SELECT AVG(sets_per_year), (SELECT language FROM common_language) FROM yearly_counts;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE BorderColor = 'black' AND availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND (UPPER(status) = 'BANNED' OR UPPER(status) = 'RESTRICTED');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T3.text FROM rulings AS T3 INNER JOIN cards AS T2 ON T3.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T3.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T2.language NOT LIKE '%Japanese%'\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE LOWER(T1.artist) = LOWER('Allen Williams') AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title  FROM posts AS T1  INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id  WHERE T2.DisplayName = 'csgillespie'  ORDER BY T1.ViewCount DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T1.AnswerCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Id = (SELECT T2.LastEditorUserId FROM posts AS T2 WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation')\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT Location FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Title = 'Eliciting priors from experts')\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.Count = (SELECT MAX(Count) FROM tags)\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT T2.DisplayName  FROM badges AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  GROUP BY T1.UserId  HAVING COUNT(T1.Id) = (SELECT MAX(badge_count) FROM (SELECT COUNT(Id) AS badge_count FROM badges GROUP BY UserId))\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "556": "SELECT (COUNT(T1.Id) / COUNT(DISTINCT T2.DisplayName)) AS average_badges FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Views > 200\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(T1.Id) * 100.0 / COUNT(T1.Id)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5 AND T2.Age > 65\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate HAVING COUNT(Id) = (SELECT MAX(vote_count) FROM (SELECT COUNT(Id) AS vote_count FROM votes GROUP BY CreationDate))\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(C.Id) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT FavoriteCount FROM posts WHERE Id = (SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014-04-23 20:29:39')\t----- bird -----\tcodebase_community",
    "564": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ParentId = 107829 AND T2.CommentCount = 1\t----- bird -----\tcodebase_community",
    "565": "SELECT T2.ClosedDate IS NOT NULL FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community",
    "571": "SELECT (COUNT(T1.Id) * 1.0 / NULLIF(COUNT(T2.Id), 0)) AS PostVoteRatio  FROM posts AS T1  LEFT JOIN votes AS T2 ON T2.UserId = 24  WHERE T1.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT T3.Text FROM comments AS T3 INNER JOIN posts AS T2 ON T3.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT T3.DisplayName FROM posts AS T1 INNER JOIN users AS T3 ON T1.LastEditorUserId = T3.Id WHERE LOWER(T1.Title) = LOWER('Open source tools for visualizing multi-dimensional data?')\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT C.Text FROM comments AS C INNER JOIN postHistory AS PH ON C.PostId = PH.PostId WHERE PH.PostId IN (SELECT P.Id FROM posts AS P WHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?')\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(BountyAmount) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data%')\t----- bird -----\tcodebase_community",
    "586": "SELECT T3.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT T1.Title, T3.Text, AVG(T1.ViewCount) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId INNER JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.TagName = 'humor' GROUP BY T1.Id, T3.Text\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "590": "SELECT OwnerUserId FROM posts WHERE views = (SELECT MIN(views) FROM posts);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Supporter' AND STRFTIME('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM badges GROUP BY UserId HAVING COUNT(Id) > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 WHERE T1.Location = 'New York' AND T1.Id IN (SELECT UserId FROM badges WHERE Name IN ('Supporter', 'Teacher') GROUP BY UserId HAVING COUNT(DISTINCT Name) = 2)\t----- bird -----\tcodebase_community",
    "594": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT T1.Id FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postHistory AS T3 ON T2.Id = T3.PostId GROUP BY T1.Id, T2.Id HAVING T2.Views >= 1000 AND COUNT(T3.PostId) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT T2.Name FROM badges AS T2 WHERE T2.UserId IN (SELECT UserId FROM comments GROUP BY UserId HAVING COUNT(Id) = (SELECT MAX(CommentCount) FROM (SELECT UserId, COUNT(Id) AS CommentCount FROM comments GROUP BY UserId)))\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT      (SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) -      (SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_difference FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT PostHistoryTypeId, (SELECT COUNT(DISTINCT UserId) FROM comments WHERE PostId = 3720) AS UniqueUserCount FROM postHistory WHERE PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT T1.Id, T1.ViewCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId WHERE T2.PostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT T1.Id, T1.OwnerUserId FROM posts AS T1 WHERE T1.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND STRFTIME('%Y', CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT SUM(U.UpVotes) / COUNT(U.Id) AS AverageUpVotes, SUM(U.Age) / COUNT(U.Id) AS AverageAge FROM users AS U INNER JOIN (SELECT OwnerUserId, COUNT(*) AS PostCount FROM posts GROUP BY OwnerUserId HAVING COUNT(*) > 10) AS P ON U.Id = P.OwnerUserId\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.Reputation = (SELECT MAX(Reputation) FROM users AS T1)\t----- bird -----\tcodebase_community",
    "611": "SELECT T2.Reputation FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT T1.UserId) * 100.0 / COUNT(DISTINCT T2.Id)) AS percentage  FROM badges AS T1  LEFT JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM users  WHERE Id IN (SELECT UserId FROM badges WHERE Name = 'Organizer');\t----- bird -----\tcodebase_community",
    "616": "SELECT C.Score FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.CreaionDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 WHERE T1.PostId = (SELECT T2.Id FROM posts AS T2 WHERE T2.CreationDate = '2010-07-19 19:37:33.0')\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Supporter' AND U.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT SUM(U.views) FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE B.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T2.UserId = T1.Id WHERE T1.Reputation = (SELECT MIN(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "622": "SELECT T2.Name FROM badges AS T2 INNER JOIN users AS T1 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 65\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT (SUM(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) * 1.0) / (SUM(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END)) FROM votes\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT T3.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN postLinks AS T4 ON T2.Id = T4.PostId INNER JOIN tags AS T3 ON T4.RelatedPostId = T3.Id WHERE LOWER(T1.DisplayName) = LOWER('John Salvatier')\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'slashnick') AND T1.AnswerCount = (SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT T2.Id FROM users AS T2 WHERE T2.DisplayName = 'slashnick'))\t----- bird -----\tcodebase_community",
    "634": "SELECT U.DisplayName, SUM(P.ViewCount) FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY U.DisplayName ORDER BY SUM(P.ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN votes AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Matt Parker' AND T3.PostId > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE C.Score < 60 AND U.DisplayName = 'Neil McGuigan'\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT T3.TagName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T1.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(T3.ExcerptPostId) * 100.0 / COUNT(T1.Id)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id LEFT JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "640": "SELECT (SUM(CASE WHEN U.DisplayName = 'Mornington' THEN P.ViewCount ELSE 0 END) - SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END)) AS ViewCountDifference FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T3.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T2.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE STRFTIME('%Y', T1.Date) = '2011' AND T2.Location = 'North Pole'\t----- bird -----\tcodebase_community",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT T1.Id, COUNT(T2.Id) AS PostHistoryCount, T1.LastEditDate FROM posts AS T1 LEFT JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY T1.Id\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT Title FROM posts WHERE LOWER(Body) LIKE LOWER('%How to tell if something happened in a data set which monitors a value over time%')\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.Id, T2.Name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Samuel') AND STRFTIME('%Y', T1.CreaionDate) = '2013' AND STRFTIME('%Y', T2.Date) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT T3.DisplayName, T3.Location FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T2.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN posts AS T3 ON T1.Id = T3.ParentId INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T3.ParentId IS NOT NULL ORDER BY T3.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T2.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 AND T1.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8)\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE YEAR(T1.CreaionDate) = 2011 AND T2.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users)\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE LasActivityDate LIKE '2010-07-19%'\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(T1.Id) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT T2.Id FROM posts AS T2 WHERE T2.FavoriteCount = (SELECT MAX(T2.FavoriteCount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465)\t----- bird -----\tcodebase_community",
    "667": "SELECT T2.Title FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)\t----- bird -----\tcodebase_community",
    "668": "WITH BadgeCounts AS (SELECT UserId, COUNT(Name) AS badge_count FROM badges GROUP BY UserId) SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM BadgeCounts WHERE badge_count = (SELECT MAX(badge_count) FROM BadgeCounts))\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(T1.CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(CreaionDate) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Age = (SELECT MIN(Age) FROM users))\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' AND T1.Date = (SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer')\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(T1.PostId) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age = (SELECT MAX(Age) FROM users)\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', T1.CreaionDate) = '2010'\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount = (SELECT MAX(T3.ViewCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'Harvey Motulsky')\t----- bird -----\tcodebase_community",
    "679": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T2.Score) FROM posts AS T2 INNER JOIN users AS T1 ON T2.OwnerUserId = T1.Id WHERE T1.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND STRFTIME('%Y', T1.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2010' AND T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE STRFTIME('%Y', CreationDate) = '2010')\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(CASE WHEN T2.Reputation > 1000 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE strftime('%Y', T1.CreaionDate) = '2011'\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(Id)) AS percentage FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(C.Id) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T3.DisplayName, T3.Location FROM users AS T3 WHERE T3.Id = (SELECT T1.LastEditorUserId FROM posts AS T1 WHERE T1.Id = 183)\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') AND Date = (SELECT MAX(Date) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett'))\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT (julianday(T1.Date) - julianday(T2.CreationDate)) AS DaysDifference FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "WITH LatestUser AS (SELECT Id FROM users WHERE CreationDate = (SELECT MAX(CreationDate) FROM users)) SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM LatestUser)) + (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM LatestUser))\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T2.DisplayName FROM comments AS T1 INNER JOIN posts AS T3 ON T1.PostId = T3.Id INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T3.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(DISTINCT T2.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T1.TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.Title = 'Clustering 1D data') + (SELECT COUNT(*) FROM posts WHERE Title = 'Clustering 1D data' AND PostTypeId = 2) AS TotalCount\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "WITH MostInfluentialUser AS (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) LIMIT 1) SELECT COUNT(T1.Id) * 1.0 / (SELECT COUNT(*) FROM posts WHERE UserId = (SELECT Id FROM MostInfluentialUser)) FROM posts AS T1 WHERE Score > 50 AND UserId = (SELECT Id FROM MostInfluentialUser)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT U.Reputation, U.UpVotes FROM users AS U INNER JOIN comments AS C ON U.Id = C.UserId WHERE C.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT C.Text FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.ViewCount BETWEEN 100 AND 150 ORDER BY C.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(C.Id) FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.CommentCount = 1 AND C.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT T1.Id, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community",
    "713": "SELECT T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN U.UpVotes = 0 THEN 1 END) * 100.0) / COUNT(CASE WHEN C.Score BETWEEN 5 AND 10 THEN 1 END) AS percentage  FROM comments AS C  INNER JOIN users AS U ON C.UserId = U.Id  WHERE C.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Blue')\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T3.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T1.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "726": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT T2.colour, COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' GROUP BY T2.colour ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND T3.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T3.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND T3.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'))\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Intelligence' AND T1.attribute_value = (SELECT MIN(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name HAVING COUNT(T2.power_id) = (SELECT MAX(power_count) FROM (SELECT COUNT(T2.power_id) AS power_count FROM hero_power AS T2 GROUP BY T2.hero_id))\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "743": "SELECT (SUM(CASE WHEN S.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_bad_superheroes,         COUNT(CASE WHEN S.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND P.publisher_name = 'Marvel Comics' THEN 1 END) AS count_marvel_bad_superheroes  FROM superhero AS S  INNER JOIN publisher AS P ON S.publisher_id = P.id\t----- bird -----\tsuperhero",
    "744": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT T4.power_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T1.race_id = (SELECT id FROM race WHERE race = 'Human') AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "760": "SELECT (SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS hero INNER JOIN publisher AS publisher ON hero.publisher_id = publisher.id WHERE hero.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero) AND T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "762": "WITH PowerCounts AS (     SELECT T1.power_name, COUNT(T2.hero_id) AS power_count     FROM superpower AS T1     INNER JOIN hero_power AS T2 ON T1.id = T2.power_id     GROUP BY T1.power_name ) SELECT power_name FROM PowerCounts WHERE power_count = (SELECT MAX(power_count) FROM PowerCounts);\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT T3.full_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'strength' AND T1.attribute_value = (SELECT MAX(T4.attribute_value) FROM hero_attribute AS T4 INNER JOIN attribute AS T5 ON T4.attribute_id = T5.id WHERE T5.attribute_name = 'strength')\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(T1.id) * 1.0 / SUM(CASE WHEN T1.skin_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour') THEN 1 ELSE 0 END) FROM superhero AS T1\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "769": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN hero_attribute AS T1 ON T2.id = T1.hero_id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id INNER JOIN publisher AS T4 ON T2.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' AND T1.attribute_value = (SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN publisher AS T4 ON T2.publisher_id = T4.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT T2.publisher_name, T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (SUM(CASE WHEN T3.colour = 'Blue' AND T2.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END)) * 100 AS percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id  INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id  WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT T1.eye_colour_id FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM hero_attribute AS T1 WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS T2 INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "787": "SELECT T2.race, T3.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) * 100 AS percent FROM superhero AS T1 WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT (SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END)) AS weight_difference FROM superhero\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id  INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id  WHERE T3.attribute_name = 'Speed'  AND T2.attribute_value = (SELECT MAX(T2.attribute_value) FROM hero_attribute AS T2 INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed')\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(id) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL OR publisher_id != 1;\t----- bird -----\tsuperhero",
    "800": "SELECT (SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.superhero_name)) AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\t----- bird -----\tsuperhero",
    "801": "SELECT (SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END)) AS ratio FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT T3.race FROM superhero AS T1 INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT R.race FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id WHERE S.id = (SELECT T.hero_id FROM hero_attribute AS T WHERE T.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute))\t----- bird -----\tsuperhero",
    "811": "SELECT T2.alignment, T3.power_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T3 ON T4.power_id = T3.id WHERE T1.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3\t----- bird -----\tsuperhero",
    "814": "SELECT T3.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND gender_id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT T4.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.colour = 'blue' AND T3.gender = 'Male'\t----- bird -----\tsuperhero",
    "818": "SELECT (SUM(CASE WHEN T3.id = 2 THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT (COUNT(CASE WHEN T1.eye_colour_id = 7 THEN 1 END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN 1 END)) AS difference FROM superhero AS T1 WHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "820": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.superhero_name = 'Hulk'\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT T2.superhero_name FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T2.weight_kg = (SELECT MAX(T2.weight_kg) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T1.publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race <> 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T2.attribute_value = 100 AND T3.attribute_name = 'Speed'\t----- bird -----\tsuperhero",
    "829": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "830": "SELECT T3.attribute_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.superhero_name = 'Black Panther' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "833": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT (SUM(CASE WHEN A.alignment = 'Good' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS S INNER JOIN alignment AS A ON S.alignment_id = A.id INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute);\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 WHERE T1.weight_kg < 100 AND T1.eye_colour_id = (SELECT T2.id FROM colour AS T2 WHERE T2.colour = 'Brown')\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.driverId IN (SELECT T2.driverId FROM qualifying AS T2 WHERE T2.raceId = 20 ORDER BY T2.q1 DESC LIMIT 5)\t----- bird -----\tformula_1",
    "847": "SELECT surname FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 19 ORDER BY q2 ASC LIMIT 1)\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE UPPER(T2.name) = 'SHANGHAI'\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT T3.position FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId INNER JOIN results AS T3 ON T2.raceId = T3.raceId WHERE T1.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2010 AND C.country NOT IN ('list_of_asian_countries', 'list_of_european_countries');\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT url FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit')\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix')\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 24 AND T1.points = 1\t----- bird -----\tformula_1",
    "859": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '1:40.000' AND T1.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT T3.number FROM qualifying AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.q3 LIKE '1:54%' AND T1.raceId = 903\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT T2.forename, T2.surname, T2.dob FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time IS NOT NULL AND T1.raceId = 592 ORDER BY T2.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time LIKE '1:27%' AND T1.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 AND T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)\t----- bird -----\tformula_1",
    "868": "SELECT T3.lat, T3.lng FROM races AS T1 INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorResults WHERE raceId = 9 ORDER BY points DESC LIMIT 1);\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 = '00:01:15' AND T1.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE (T1.q3 = '0:01:33' OR T1.q3 = '1:33') AND T1.raceId = 45\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.surname = 'McLaren' AND T1.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT driverId FROM results WHERE position = 2 AND raceId IN (SELECT raceId FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006);\t----- bird -----\tformula_1",
    "875": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901);\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM results WHERE time IS NULL AND raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29')\t----- bird -----\tformula_1",
    "877": "SELECT MAX(T1.dob) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL\t----- bird -----\tformula_1",
    "878": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 AND T1.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = 348)\t----- bird -----\tformula_1",
    "879": "SELECT T3.nationality FROM drivers AS T3 INNER JOIN results AS T1 ON T3.driverId = T1.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(T2.fastestLapSpeed) FROM results AS T2)\t----- bird -----\tformula_1",
    "880": "SELECT (R1.fastestLapSpeed - R2.fastestLapSpeed) / R1.fastestLapSpeed * 100 AS percent_faster  FROM (SELECT fastestLapSpeed FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.raceId = 853 AND D.forename = 'Paul' AND D.surname = 'di Resta') AS R1,      (SELECT fastestLapSpeed FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.raceId = 854 AND D.forename = 'Paul' AND D.surname = 'di Resta') AS R2\t----- bird -----\tformula_1",
    "881": "SELECT (COUNT(driverId) * 100.0 / COUNT(driverId)) AS completion_rate FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16') AND time IS NOT NULL\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId) AS race_count, name FROM races WHERE year = 2005 GROUP BY name ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE date = (SELECT MIN(date) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999);\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "889": "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Brands Hatch' AND T1.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'British Grand Prix' AND T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "891": "SELECT T1.surname, T1.forename FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position ASC\t----- bird -----\tformula_1",
    "892": "SELECT T2.forename, T2.surname, T1.points FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.points = (SELECT MAX(points) FROM driverStandings)\t----- bird -----\tformula_1",
    "893": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2017) ORDER BY T2.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT T1.forename, T1.surname, T2.name, MIN(T3.milliseconds)  FROM drivers AS T1  INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId  INNER JOIN races AS T2 ON T3.raceId = T2.raceId  GROUP BY T1.driverId, T2.raceId  HAVING MIN(T3.milliseconds) = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T4.milliseconds) FROM lapTimes AS T4 INNER JOIN results AS T3 ON T4.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId INNER JOIN races AS T1 ON T3.raceId = T1.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(CASE WHEN T1.position > 1 THEN 1 END) * 1.0 / COUNT(*)) * 100 AS percentage_not_first  FROM results AS T1  INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T1.raceId = T3.raceId  WHERE T2.surname = 'Hamilton' AND T3.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.points)  FROM drivers AS T1  INNER JOIN constructorStandings AS T2 ON T1.driverId = T2.constructorId  GROUP BY T1.driverId  ORDER BY COUNT(T2.wins) DESC  LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT T1.forename, T1.surname, (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.dob)) AS age FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT circuitId FROM races WHERE year BETWEEN 1990 AND 2000 GROUP BY circuitId HAVING COUNT(raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE STRFTIME('%m', T1.date) = '09' AND STRFTIME('%Y', T1.date) = '2005'\t----- bird -----\tformula_1",
    "902": "SELECT T3.raceId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM constructorResults AS CR  INNER JOIN constructors AS C ON CR.constructorId = C.constructorId  INNER JOIN races AS R ON CR.raceId = R.raceId  INNER JOIN circuits AS CI ON R.circuitId = CI.circuitId  WHERE C.name = 'Michael Schumacher' AND CR.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = R.raceId) AND CI.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "904": "SELECT T3.name, T3.year FROM lapTimes AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.milliseconds = (SELECT MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher')\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Eddie' AND T2.surname = 'Irvine' AND T3.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT T3.raceId, T2.points  FROM drivers AS T1  INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'  AND T3.year = (SELECT MIN(year) FROM races WHERE raceId IN (SELECT raceId FROM driverStandings WHERE driverId = T1.driverId))\t----- bird -----\tformula_1",
    "907": "SELECT T1.name, T1.date, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T1.year, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN results AS T3 ON T1.raceId = T3.raceId WHERE T3.laps = (SELECT MAX(laps) FROM results)\t----- bird -----\tformula_1",
    "909": "SELECT (SUM(CASE WHEN C.country = 'Germany' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name, MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') GROUP BY name\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits WHERE alt IS NOT NULL);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE LOWER(nationality) = 'italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuitId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 2010 AND 2019 AND T2.name = 'Yas Marina Circuit'\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT T2.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "927": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T2.name = 'Canadian Grand Prix' AND T2.year = 2007\t----- bird -----\tformula_1",
    "929": "SELECT T3.name FROM races AS T3 INNER JOIN results AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT T3.name FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.position ASC LIMIT 1\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT R.year  FROM races AS R  INNER JOIN results AS Res ON R.raceId = Res.raceId  INNER JOIN drivers AS D ON Res.driverId = D.driverId  WHERE D.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder FROM results AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Chinese Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "934": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.grid = 4 AND T2.year = 1989 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results WHERE time IS NOT NULL AND raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix');\t----- bird -----\tformula_1",
    "936": "SELECT MIN(T3.time) FROM lapTimes AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Australian Grand Prix' AND T2.year = 2008\t----- bird -----\tformula_1",
    "937": "SELECT time FROM results WHERE position = 2 AND raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "938": "SELECT T2.forename, T2.surname, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.position = 1 AND T1.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'British' AND T3.year = 2008 AND T3.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'Chinese Grand Prix' AND `year` = 2008) AND `time` IS NOT NULL AND `driverId` IN (SELECT `driverId` FROM `driverStandings`)\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "942": "SELECT AVG((CAST(SUBSTR(fastestLapTime, 1, 2) AS INTEGER) * 60) + (CAST(SUBSTR(fastestLapTime, 4, 2) AS INTEGER)) + (CAST(SUBSTR(fastestLapTime, 7) AS REAL) / 1000)) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton')\t----- bird -----\tformula_1",
    "943": "SELECT (COUNT(T1.raceId) * 1.0 / COUNT(T1.raceId)) AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "944": "SELECT ( (last_driver_time - champion_time) / last_driver_time ) * 100 AS speed_difference FROM ( SELECT (SELECT CAST(time AS REAL) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1) AS champion_time, (SELECT CAST(time AS REAL) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) AS last_driver_time ) AS times WHERE champion_time IS NOT NULL AND last_driver_time IS NOT NULL;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T2.points) FROM constructorStandings AS T2 INNER JOIN constructors AS T1 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = (SELECT MAX(points) FROM constructorResults)\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japanese' AND T2.points = 0 GROUP BY T1.constructorId HAVING COUNT(T2.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT (SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.driverId)) AS completion_percentage FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year BETWEEN 2007 AND 2009 AND T2.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "955": "SELECT R2.year, AVG(CAST(SUBSTR(R.time, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(R.time, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(R.time, 7, 2) AS INTEGER) + CAST(SUBSTR(R.time, 10, 3) AS INTEGER) / 1000) AS average_time_in_seconds FROM results AS R INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE R.position = 1 AND R.time IS NOT NULL AND R2.year < 1975 GROUP BY R2.year\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) > '1975' AND T2.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId WHERE D.nationality = 'Italian' AND R.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "959": "SELECT fastestLap FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009) AND time NOT LIKE '+%'\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE milliseconds IS NOT NULL)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT T1.driverId) * 100.0 / NULLIF((SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE strftime('%Y', T3.year) BETWEEN '2000' AND '2005'), 0)) AS percentage FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE strftime('%Y', T1.dob) < '1985' AND T2.lap > 50\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%s', T1.time) < 120 AND T2.nationality = 'French'\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT COUNT(*) FROM drivers WHERE dob IN (SELECT dob FROM drivers ORDER BY dob DESC LIMIT 3) AND nationality = 'Dutch';\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT T1.driverId, T1.forename, T1.surname, MIN(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) BETWEEN '1980' AND '1990' GROUP BY T1.driverId ORDER BY MIN(T2.time) ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "972": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "973": "SELECT T1.driverId, T1.forename, T1.surname, MAX(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01' GROUP BY T1.driverId ORDER BY MAX(T2.time) DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT r.year FROM races AS r INNER JOIN lapTimes AS l ON r.raceId = l.raceId WHERE l.time = (SELECT MAX(time) FROM lapTimes)\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE time IS NOT NULL AND statusId = 2 AND raceId > 50 AND raceId < 100;\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\t----- bird -----\tformula_1",
    "979": "SELECT raceId FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 IS NOT NULL AND T1.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT STRFTIME('%Y', R.date) AS year, D.forename, D.surname, R.date, R.time  FROM drivers AS D  INNER JOIN qualifying AS Q ON D.driverId = Q.driverId  INNER JOIN races AS R ON Q.raceId = R.raceId  WHERE D.dob = (SELECT MAX(dob) FROM drivers)  AND R.date = (SELECT MIN(R2.date) FROM races AS R2 INNER JOIN qualifying AS Q2 ON R2.raceId = Q2.raceId WHERE Q2.driverId = D.driverId)\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = (SELECT statusId FROM status WHERE status = 'Puncture')\t----- bird -----\tformula_1",
    "983": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT url FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorStandings GROUP BY constructorId ORDER BY SUM(wins) DESC LIMIT 1)\t----- bird -----\tformula_1",
    "985": "SELECT driverId FROM lapTimes WHERE lap = 3 AND raceId = (SELECT raceId FROM races WHERE name = 'French Grand Prix') ORDER BY time DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT T2.name, MIN(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 GROUP BY T2.raceId ORDER BY MIN(T1.milliseconds) ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE rank < 11 AND raceId = (SELECT raceId FROM races WHERE year = 2006 AND name = 'United States Grand Prix')\t----- bird -----\tformula_1",
    "988": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.dob BETWEEN '1980-01-01' AND '1985-12-31' AND T1.nationality = 'German' GROUP BY T1.driverId ORDER BY AVG(T2.duration) ASC LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT T3.forename, T3.surname, T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "990": "SELECT T2.constructorRef, T2.url  FROM results AS T1  INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId  WHERE T1.time = (SELECT MIN(T1.time)                   FROM results AS T1                   INNER JOIN races AS T3 ON T1.raceId = T3.raceId                   WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix')\t----- bird -----\tformula_1",
    "991": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND STRFTIME('%Y', T1.dob) BETWEEN '1981' AND '1991'\t----- bird -----\tformula_1",
    "992": "SELECT T1.forename, T1.surname, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT T3.name, T3.nationality, SUM(T1.points) AS total_points  FROM constructorResults AS T1  INNER JOIN races AS T2 ON T1.raceId = T2.raceId  INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId  WHERE T2.name = 'Monaco Grand Prix' AND T2.year BETWEEN 1980 AND 2010  GROUP BY T3.constructorId  ORDER BY total_points DESC  LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE name = 'Turkish Grand Prix')\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count, STRFTIME('%Y', date) AS race_year FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY race_year)\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE driverId = (SELECT driverId FROM driverStandings ORDER BY points DESC LIMIT 1 OFFSET 90);\t----- bird -----\tformula_1",
    "999": "SELECT T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.fastestLapTime LIMIT 1\t----- bird -----\tformula_1",
    "1000": "SELECT T2.location || ', ' || T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T2.position = 1 AND T3.year = 2008 AND T3.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T2.raceId = (SELECT raceId FROM qualifying AS Q1 INNER JOIN races AS R1 ON Q1.raceId = R1.raceId WHERE R1.year = 2008 AND R1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') GROUP BY Q1.raceId ORDER BY Q1.raceId LIMIT 1 OFFSET 2)\t----- bird -----\tformula_1",
    "1002": "SELECT T1.forename || ' ' || T1.surname, T1.nationality, T3.name  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  INNER JOIN races AS T3 ON T2.raceId = T3.raceId  WHERE T1.dob = (SELECT MAX(dob) FROM drivers)  AND T2.raceId = (SELECT raceId FROM results WHERE driverId = T1.driverId ORDER BY raceId ASC LIMIT 1)\t----- bird -----\tformula_1",
    "1003": "WITH DriverAccidents AS (     SELECT driverId, COUNT(*) AS accident_count     FROM results     WHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND statusId = 3     GROUP BY driverId ) SELECT accident_count FROM DriverAccidents ORDER BY accident_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename, T1.surname, T2.wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(CAST(duration AS REAL)) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(milliseconds) FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis') AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2011)\t----- bird -----\tformula_1",
    "1009": "SELECT P.duration  FROM pitStops AS P  INNER JOIN races AS R ON P.raceId = R.raceId  WHERE R.year = 2011 AND R.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(T3.time) FROM lapTimes AS T3 INNER JOIN results AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname  FROM drivers AS T1  INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId  WHERE T2.time = (SELECT MIN(time) FROM lapTimes)  AND T1.driverId IN (SELECT driverId FROM results ORDER BY position LIMIT 20)\t----- bird -----\tformula_1",
    "1012": "WITH LewisHamilton AS (     SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) SELECT position FROM lapTimes WHERE driverId = (SELECT driverId FROM LewisHamilton) AND time = (SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM LewisHamilton))\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(time) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix')\t----- bird -----\tformula_1",
    "1014": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ORDER BY T1.time\t----- bird -----\tformula_1",
    "1015": "SELECT T1.raceId FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit' AND T1.time = (SELECT MIN(T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Austrian Grand Prix Circuit')\t----- bird -----\tformula_1",
    "1016": "WITH race_info AS (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix') SELECT duration FROM pitStops WHERE driverId = (SELECT driverId FROM lapTimes WHERE raceId = (SELECT raceId FROM race_info) ORDER BY milliseconds ASC LIMIT 1) AND raceId = (SELECT raceId FROM race_info)\t----- bird -----\tformula_1",
    "1017": "SELECT T3.lat, T3.lng FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.location = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id, crossing FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id FROM Match WHERE home_team_goal < away_team_goal AND season = '2015/2016' GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T3.team_long_name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id INNER JOIN Team AS T3 ON T1.away_team_api_id = T3.team_api_id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND T1.away_team_goal > T1.home_team_goal GROUP BY T3.team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T1.buildUpPlaySpeed FROM Team_Attributes AS T1 ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T3.name FROM League AS T3 INNER JOIN Match AS T1 ON T1.league_id = T3.id WHERE T1.home_team_goal = T1.away_team_goal AND T1.season = '2015/2016' GROUP BY T3.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT strftime('%Y', 'now') - strftime('%Y', P.birthday) AS age FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id WHERE PA.sprint_speed >= 97 AND strftime('%Y', PA.date) >= '2013' AND strftime('%Y', PA.date) <= '2015'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T2.name, COUNT(T1.league_id) AS match_count FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY match_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date, 1, 4) = '2010') AND substr(date, 1, 4) = '2010'\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(T2.buildUpPlayPassing) FROM Team_Attributes AS T2 WHERE strftime('%Y', T2.date) = '2012' AND T2.buildUpPlayPassing IS NOT NULL)\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN PA.preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(P.player_fifa_api_id)) AS percentage FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE STRFTIME('%Y', P.birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match GROUP BY league_id ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_fifa_api_id ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date < '2015-01-01 00:00:00' AND (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01 00:00:00' AND date < '2015-01-01 00:00:00') > T1.chanceCreationPassing ORDER BY T1.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(home_team_goal) > AVG(away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE STRFTIME('%Y', birthday) = '1970' AND STRFTIME('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T2.heading_accuracy FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francois Affolter' AND T2.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT PA.preferred_foot FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.birthday = (SELECT MAX(birthday) FROM Player);\t----- bird -----\teuropean_football_2",
    "1051": "SELECT P.* FROM Player P INNER JOIN Player_Attributes PA ON P.player_fifa_api_id = PA.player_fifa_api_id WHERE PA.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'David Wilson')\t----- bird -----\teuropean_football_2",
    "1055": "SELECT P.birthday FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(T1.home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "1058": "SELECT Player.player_name, AVG(Player_Attributes.finishing) AS avg_finishing FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height = (SELECT MAX(height) FROM Player) OR Player.height = (SELECT MIN(height) FROM Player) GROUP BY Player.player_name ORDER BY avg_finishing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE STRFTIME('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80 AND STRFTIME('%Y', T2.date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT P.* FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t1.overall_rating) FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t2.height > 170 AND STRFTIME('%Y', t1.date) >= '2010' AND STRFTIME('%Y', t1.date) <= '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', T1.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_fifa_api_id FROM Player_Attributes WHERE balance = (SELECT MAX(balance) FROM Player_Attributes) AND potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUM(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.id ELSE NULL END) - SUM(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.id ELSE NULL END)  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday,         CASE             WHEN birthday = (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') THEN 'Aaron Lennon is older'            WHEN birthday = (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') THEN 'Abdelaziz Barrada is older'        END AS age_comparison FROM Player  WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.preferred_foot = 'left' AND PA.attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Germany')\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE STRFTIME('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone'));\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS M INNER JOIN Team AS T ON M.home_team_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Belgium' AND M.season = '2008/2009'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player ORDER BY birthday ASC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(id) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND SUBSTR(date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT T2.name FROM League AS T2 INNER JOIN (SELECT league_id, COUNT(*) AS match_count FROM Match WHERE season = '2008/2009' GROUP BY league_id) AS T1 ON T1.league_id = T2.id WHERE T1.match_count = (SELECT MAX(match_count) FROM (SELECT COUNT(*) AS match_count FROM Match WHERE season = '2008/2009' GROUP BY league_id))\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T2.birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT ((A.overall_rating - P.overall_rating) / P.overall_rating) * 100 AS percentage_difference FROM Player AS A JOIN Player AS P ON A.player_name = 'Ariel Borysiuk' AND P.player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match AS M INNER JOIN Team AS T ON M.away_team_api_id = T.team_api_id INNER JOIN League AS L ON M.league_id = L.id WHERE T.team_long_name = 'Parma' AND L.name LIKE '%Italy%'\t----- bird -----\teuropean_football_2",
    "1102": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = 77 AND PA.date LIKE '2016-06-23%' ORDER BY P.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Francesco Parravicini' AND T1.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MIN(T1.date) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = (SELECT MAX(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant')\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2012-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 WHERE T1.team_api_id = (SELECT T2.team_api_id FROM Team AS T2 WHERE T2.team_short_name = 'LEI') AND T1.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T1.chanceCreationCrossingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hull City' AND T1.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ((Landon_Overall - Jordan_Overall) / Landon_Overall) * 100 AS percentage FROM (SELECT PA1.overall_rating AS Landon_Overall, PA2.overall_rating AS Jordan_Overall FROM Player AS P1 INNER JOIN Player_Attributes AS PA1 ON P1.player_fifa_api_id = PA1.player_fifa_api_id INNER JOIN Player AS P2 INNER JOIN Player_Attributes AS PA2 ON P2.player_fifa_api_id = PA2.player_fifa_api_id WHERE P1.player_name = 'Landon Donovan' AND PA1.date = '2013-07-12' AND P2.player_name = 'Jordan Bowery' AND PA2.date = '2013-07-12')\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON M.home_player_X1 = P.player_api_id WHERE P.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match AS M INNER JOIN Player AS P ON P.player_api_id IN (M.away_player_1, M.away_player_2, M.away_player_3, M.away_player_4, M.away_player_5, M.away_player_6, M.away_player_7, M.away_player_8, M.away_player_9, M.away_player_10, M.away_player_11) WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(M.home_team_goal) FROM Match AS M INNER JOIN Player AS P ON (M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id) WHERE strftime('%Y', 'now') - strftime('%Y', P.birthday) <= 30\t----- bird -----\teuropean_football_2",
    "1122": "SELECT P.player_name  FROM Player P  INNER JOIN Player_Attributes PA ON P.player_fifa_api_id = PA.player_fifa_api_id  WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id WHERE PA.finishing = 1 ORDER BY P.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Team AS T2 ON T1.player_api_id = T2.team_api_id INNER JOIN League AS T3 ON T2.team_api_id = T3.id INNER JOIN Country AS T4 ON T3.country_id = T4.id WHERE T4.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T2.player_name, C.name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Team AS T3 ON T2.player_api_id = T3.team_api_id INNER JOIN League AS T4 ON T3.team_api_id = T4.country_id INNER JOIN Country AS C ON T4.country_id = C.id WHERE T1.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "WITH avg_weights AS (SELECT L.country_id, AVG(P.weight) AS avg_weight FROM Player AS P INNER JOIN Team AS T ON P.player_api_id = T.team_api_id INNER JOIN League AS L ON T.team_fifa_api_id = L.id GROUP BY L.country_id) SELECT country_id FROM avg_weights WHERE avg_weight = (SELECT MAX(avg_weight) FROM avg_weights);\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T2.team_long_name FROM Team AS T2 INNER JOIN Team_Attributes AS T1 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T1.height) FROM Player AS T1 WHERE T1.player_api_id IN (SELECT T2.team_api_id FROM Team AS T2 INNER JOIN League AS T3 ON T2.team_api_id = T3.id INNER JOIN Country AS T4 ON T3.country_id = T4.id WHERE T4.name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (P1.jumping - P2.jumping) AS score_difference FROM Player_Attributes AS P1, Player_Attributes AS P2 WHERE P1.player_api_id = 6 AND P2.player_api_id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' ORDER BY potential ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes)) AS percentage FROM Player_Attributes WHERE strength > 80 AND stamina > 80\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT M.home_team_goal, M.away_team_goal FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.date LIKE '2008-09-24%' AND L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Italy Serie A' AND M.season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve  FROM Player AS P  INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id  WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.name, COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_fifa_api_id = Player_Attributes.player_fifa_api_id ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (SUM(CASE WHEN P.height < 180 AND PA.overall_rating > 70 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id\t----- bird -----\teuropean_football_2",
    "1149": "SELECT      COUNT(CASE WHEN Admission = '+' THEN ID END) AS count_inpatient,     COUNT(CASE WHEN Admission = '-' THEN ID END) AS count_outpatient,     (COUNT(CASE WHEN Admission = '+' THEN ID END) - COUNT(CASE WHEN Admission = '-' THEN ID END)) * 100.0 / NULLIF(COUNT(CASE WHEN Admission = '-' THEN ID END), 0) AS percentage_deviation FROM Patient  WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(CASE WHEN SEX = 'F' AND strftime('%Y', Birthday) > '1930' THEN ID END) * 100.0 / COUNT(CASE WHEN SEX = 'F' THEN ID END)) AS percentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT (COUNT(CASE WHEN Admission = '+' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END), 0) AS ratio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT P.Diagnosis, L.Date FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (strftime('%Y', current_timestamp) - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.DIAGNOSIS FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.THROMBOSIS = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T2.ID, T2.birthday FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE STRFTIME('%Y', T2.birthday) = '1937' AND T1.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (SUM(CASE WHEN T1.TP < 6.0 OR T1.TP > 8.5 THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.ID)) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday)) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(CAST(strftime('%Y', `First Date`) AS INTEGER) - CAST(strftime('%Y', Birthday) AS INTEGER)) FROM Patient WHERE `First Date` IS NOT NULL AND `Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 1 AND STRFTIME('%Y', E.`Examination Date`) = '1997' AND P.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(STRFTIME('%Y', P.Birthday)) - MIN(STRFTIME('%Y', P.Birthday)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG >= 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT T1.Symptoms, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = (SELECT MAX(Birthday) FROM Patient) AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT COUNT(T1.ID) / 12.0 FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT T1.\"Date\", (STRFTIME('%Y', T1.\"Date\") - STRFTIME('%Y', T2.Birthday)) AS Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' ORDER BY T2.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END), 0) FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P LEFT JOIN Examination AS E ON P.ID = E.ID WHERE (E.`Examination Date` IS NULL OR DATE(E.`Examination Date`) >= DATE(P.`First Date`, '+1 year'))\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Birthday) >= STRFTIME('%Y', T1.\"Examination Date\") - 18 AND T1.\"Examination Date\" BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT P.Diagnosis, COUNT(P.Diagnosis) AS DiagnosisCount FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.\"Examination Date\" BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY P.Diagnosis ORDER BY DiagnosisCount DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', Birthday)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (CAST(strftime('%Y', T1.`Examination Date`) AS INTEGER) - CAST(strftime('%Y', T2.Birthday) AS INTEGER)), T1.`Diagnosis` FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` INNER JOIN `Laboratory` AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT `T-CHO` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T1.`aCL IgM` FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T2.`Description` = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date = '1992-06-12' AND L.GPT = 9\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT (STRFTIME('%Y', '1991-10-21') - STRFTIME('%Y', P.Birthday)) AS age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.UA = '8.4' AND L.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T3.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND STRFTIME('%Y', T3.Date) = '1995'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.`Examination Date` = '1997-01-27'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT E.Symptoms FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = '1959-03-01' AND E.\"Examination Date\" = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) / NULLIF(SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END), 0) AS decrease_rate  FROM Laboratory AS T1  INNER JOIN Patient AS T2 ON T1.ID = T2.ID  WHERE T2.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE LOWER(T1.Diagnosis) = 'behcet' AND T2.`Examination Date` >= '1997-01-01' AND T2.`Examination Date` < '1998-01-01'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Birthday >= '1964-01-01' AND Birthday < '1965-01-01' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination AS T1 WHERE T1.Thrombosis = 2 AND T1.ANA = 'S' AND T1.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN UA <= 6.5 THEN 1 END) * 100.0 / COUNT(CASE WHEN \"U-PRO\" > 0 AND \"U-PRO\" < 30 THEN 1 END)) AS percentage FROM Laboratory WHERE \"U-PRO\" > 0 AND \"U-PRO\" < 30\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM Patient WHERE SEX = 'M' AND STRFTIME('%Y', `First Date`) = '1981'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.`ANA Pattern` != 'P' AND P.`SEX` = 'F' AND P.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Diagnosis = 'PSS' AND T3.CRP > 2 AND T3.CRE = 1 AND T3.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T2.ID = T3.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T3.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT T1.Description, T1.Diagnosis FROM Patient AS T1 WHERE T1.ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE STRFTIME('%Y', Date) = '1997' AND (TP <= 6 OR TP >= 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (SUM(CASE WHEN P.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN E.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END), 0)) AS proportion  FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM Patient WHERE Birthday BETWEEN '1980-01-01' AND '1980-12-31' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND E.Diagnosis = 'Behcet' AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT julianday(E.`Examination Date`) - julianday(P.`First Date`) FROM `Patient` AS P INNER JOIN `Examination` AS E ON P.`ID` = E.`ID` WHERE P.`ID` = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (T1.UA > 8.0 AND T2.SEX = 'M') OR (T1.UA > 6.5 AND T2.SEX = 'F') THEN 'Yes' ELSE 'No' END FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.Date) = '1994'\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT > 60 ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (strftime('%Y', current_timestamp) - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT (T1.TP - 8.5) AS deviation FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ID, T1.Birthday, T2.ALB FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982' AND T2.ALB BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.UA > 6.5 AND P.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(T1.UA) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE (T1.UA < 8.0 AND T2.SEX = 'M' OR T1.UA < 6.5 AND T2.SEX = 'F') AND T1.Date = (SELECT MAX(Date) FROM Laboratory WHERE ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.BIRTHDAY FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND T2.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (SUM(P.SEX = 'M') > SUM(P.SEX = 'F')) AS result FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, GROUP_CONCAT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT T1.ID, T1.`T-CHO` FROM Laboratory AS T1 WHERE T1.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory) AND T1.ID = (SELECT ID FROM Patient WHERE Birthday = (SELECT MIN(Birthday) FROM Patient))\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', Birthday)) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.Diagnosis, T2.TG FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T1.SEX = 'M' AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU < 180 AND STRFTIME('%Y', T1.Description) = '1991'\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX ORDER BY STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT T2.Diagnosis, T2.ID, STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT T1.Admission, T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'F' AND STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.HCT >= 52 GROUP BY P.ID HAVING COUNT(L.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_count, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_count FROM Laboratory WHERE PLT <= 100 OR PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Date) = '1984' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday)) < 50 AND T1.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (SUM(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END)) AS percentage  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) > 55 AND L.PT >= 14;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`First Date`) > '1992' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.APTT > 45 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T2.ID) FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T2.Birthday > '1980-01-01' AND (T1.FG < 150 OR T1.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" >= 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.`IGG` > 900 AND E.`IGG` < 2000 AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Diagnosis FROM Patient WHERE ID = (SELECT ID FROM Laboratory WHERE IGA = (SELECT MAX(IGA) FROM Laboratory WHERE IGA BETWEEN 80 AND 500))\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND STRFTIME('%Y', T1.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT T2.Diagnosis, COUNT(T2.Diagnosis) FROM Examination AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.IGM <= 40 OR T1.IGM >= 400 GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT T2.ID) FROM Patient AS T2 INNER JOIN Examination AS T1 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T3.CRP = '+' AND T2.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.RA IN ('-', '+-') AND T2.KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday >= '1985-01-01' AND T2.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.RF < 20 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.C3 > 35 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.HCT <= 29 OR T1.HCT >= 52 AND T1.\"aCL IgA\" = (SELECT MAX(\"aCL IgA\") FROM Examination WHERE ID = T2.ID)\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'APS' AND L.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.RNP IN ('-', '+-') AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT MAX(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP NOT IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.SM IN ('-', '+-') AND E.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT T2.ID FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('negative', '0') ORDER BY T2.Birthday DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT ID FROM Examination WHERE `Examination Date` > '1997-01-01' AND `SC170` IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.SC170 IN ('negative', '0') AND T1.SEX = 'F' AND T2.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA IN ('-', '+-') AND STRFTIME('%Y', T2.`First Date`) < '2000'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('negative', '0') ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('negative', '0') AND T1.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('negative', '0') AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (SUM(CASE WHEN L.GOT >= 60 AND P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN L.GOT >= 60 THEN 1 ELSE 0 END), 0)) * 100 AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(Birthday) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GOT >= 60);\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(T1.`First Date`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500)\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(`First Date`) FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE `L`.`LDH` >= 500\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP >= 300 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' AND L.TP > 6.0 AND L.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT T1.`Examination Date` FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.ID = T2.ID WHERE T2.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5) AND T2.ALB IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB > 3.5 AND L.ALB < 5.5 AND L.TP BETWEEN 6.0 AND 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT L.\"aCL IgG\", L.\"aCL IgM\", L.\"aCL IgA\" FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA = (SELECT MAX(UA) FROM Laboratory WHERE UA > 6.50 AND ID IN (SELECT ID FROM Patient WHERE SEX = 'F'))\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT ID FROM Laboratory WHERE CRE < 1.5 AND \"aCL IgA\" = (SELECT MAX(\"aCL IgA\") FROM Laboratory WHERE CRE < 1.5)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT E.ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory WHERE \"T-BIL\" < 2.0)\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 250 AND T2.`KCT` = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` < 250 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG < 200 AND E.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200)\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GLU < 180 AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T1.PT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT E.ID) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Thrombosis IN (1, 2) AND L.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE J.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member AS M INNER JOIN attendance AS A ON M.member_id = A.link_to_member INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women''s Soccer' AND M.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id ORDER BY COUNT(T2.link_to_event) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND STRFTIME('%Y', T3.event_date) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10\t----- bird -----\tstudent_club",
    "1323": "SELECT T2.event_name FROM event AS T2 LEFT JOIN income AS T3 ON T2.event_id = T3.link_to_event AND T3.source = 'Fundraising' LEFT JOIN attendance AS T1 ON T2.event_id = T1.link_to_event GROUP BY T2.event_id HAVING COUNT(T1.link_to_member) > 20 AND T3.source IS NULL\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(event_id) * 1.0 / COUNT(DISTINCT event_name) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) FROM expense WHERE expense_description IS NOT NULL;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT T3.first_name, T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1333": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) = 0 FROM expense AS T3 WHERE T3.link_to_budget IN (SELECT T2.budget_id FROM budget AS T2 WHERE T2.link_to_event IN (SELECT T1.event_id FROM event AS T1 WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08')) AND T3.approved = 'false'\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(cost) FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND strftime('%m', expense_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SUM(CASE WHEN STRFTIME('%Y', T2.event_date) = '2019' THEN T1.spent ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T2.event_date) = '2020' THEN T1.spent ELSE 0 END)) AS difference FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters' AND T1.expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food');\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Adela' AND T2.last_name = 'O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT T2.event_status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.source = 'Dues' AND T2.first_name = 'Connor' AND T2.last_name = 'Hilton'\t----- bird -----\tstudent_club",
    "1358": "SELECT T2.first_name, T2.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = (SELECT MIN(date_received) FROM income WHERE source = 'Dues')\t----- bird -----\tstudent_club",
    "1359": "SELECT (SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff') AND category = 'Advertisement') * 1.0 / (SELECT SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting') AND category = 'Advertisement') AS ratio\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN B.category = 'Parking' THEN B.amount ELSE 0 END) / SUM(B.amount)) * 100 AS percentage  FROM budget AS B  INNER JOIN event AS E ON B.link_to_event = E.event_id  WHERE E.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT z.city, z.county, z.state  FROM member AS m  INNER JOIN zip_code AS z ON m.zip = z.zip_code  WHERE m.first_name = 'Amy' AND m.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining ASC LIMIT 1)\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting')\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount = (SELECT MAX(amount) FROM budget)\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1376": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' ORDER BY (T1.spent / T1.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(i.amount) FROM income AS i INNER JOIN member AS m ON i.link_to_member = m.member_id WHERE m.first_name = 'Grant' AND m.last_name = 'Gilmour'\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')\t----- bird -----\tstudent_club",
    "1387": "SELECT T3.first_name, T3.last_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount = (SELECT MAX(amount) FROM income WHERE link_to_member IS NOT NULL)\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent = (SELECT MIN(spent) FROM budget)\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) / (SELECT SUM(cost) FROM expense)) * 100 AS percentage FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(COUNT(CASE WHEN major_name = 'Finance' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN major_name = 'Physics' THEN 1 END), 0) AS ratio FROM major\t----- bird -----\tstudent_club",
    "1392": "SELECT MAX(source) FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30';\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND T2.event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T2.link_to_major FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi' GROUP BY T2.link_to_major\t----- bird -----\tstudent_club",
    "1397": "SELECT SUM(T1.spent) / COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 AS percentage_share FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT T2.category, SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting') GROUP BY T2.category\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.category, SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' GROUP BY T1.category ORDER BY SUM(T1.amount) ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "1411": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT T1.zip FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(CASE WHEN T1.position = 'Member' AND T2.major_name = 'Business' THEN 1 ELSE 0 END) / COUNT(T1.member_id)) * 100 AS percentage FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT T2.category FROM budget AS T2 INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.position = 'Member' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN I.amount = 50 THEN 1 END) * 100.0 / COUNT(M.member_id)) AS percentage FROM member AS M INNER JOIN income AS I ON M.member_id = I.link_to_member WHERE M.t_shirt_size = 'Medium' AND M.position = 'Member'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN expense AS T3 ON T2.member_id = T3.link_to_member WHERE T3.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T2.link_to_event = T3.link_to_budget WHERE T3.approved = 'true' AND T3.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > 20 AND T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T1.position = 'Member' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(link_to_event)) AS percentage FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) / COUNT(zip_code)) * 100 AS percentage_po_boxes FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT T2.first_name, T2.last_name, T3.major_name FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T1.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT T1.location FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN income AS T3 ON T2.link_to_member = T3.link_to_member GROUP BY T1.event_id HAVING COUNT(T3.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT e.link_to_member, SUM(e.cost) AS total_cost FROM expense AS e INNER JOIN attendance AS a ON e.link_to_member = a.link_to_member GROUP BY e.link_to_member HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT SUM(T1.cost) / COUNT(T1.link_to_budget) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.cost < (SELECT SUM(cost) / COUNT(event_id) FROM budget WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(T1.cost) / COUNT(T3.event_id)) * 100 AS percentage FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(cost) FROM expense WHERE expense_description = 'Water, chips, cookies';\t----- bird -----\tstudent_club",
    "1456": "SELECT T2.first_name, T2.last_name FROM member AS T2 INNER JOIN expense AS T1 ON T1.link_to_member = T2.member_id GROUP BY T2.member_id ORDER BY SUM(T1.cost) DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN z.state = 'New Jersey' THEN 1 ELSE 0 END) / COUNT(CASE WHEN m.position = 'Member' THEN 1 ELSE NULL END)) - (SUM(CASE WHEN z.state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN m.position = 'Member' THEN 1 ELSE NULL END)) AS percentage_difference FROM member AS m INNER JOIN zip_code AS z ON m.zip = z.zip_code\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1460": "SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT T2.event_name, SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts' GROUP BY T2.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke'\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' ORDER BY Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND T2.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY SUM(T1.Consumption) DESC\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT C.CustomerID) FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'KAM' AND Y.Consumption < 30000 AND Y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS ConsumptionDifference FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE Y.Date BETWEEN '201201' AND '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT STRFTIME('%Y', Date) AS Year, SUM(Price) AS TotalGasUse FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'EUR') GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM (SELECT Segment, SUM(Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY Segment) AS SubQuery ORDER BY TotalConsumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND T2.Segment = 'SME' GROUP BY T1.Date ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT      (SME_avg - LAM_avg) AS SME_LAM_diff,     (LAM_avg - KAM_avg) AS LAM_KAM_diff,     (KAM_avg - SME_avg) AS KAM_SME_diff FROM      (SELECT AVG(Consumption) AS SME_avg       FROM yearmonth AS ym       INNER JOIN customers AS c ON ym.CustomerID = c.CustomerID       WHERE c.Segment = 'SME' AND ym.Date BETWEEN '201301' AND '201312'       GROUP BY c.CustomerID       ORDER BY SUM(Consumption) ASC       LIMIT 1) AS SME,     (SELECT AVG(Consumption) AS LAM_avg       FROM yearmonth AS ym       INNER JOIN customers AS c ON ym.CustomerID = c.CustomerID       WHERE c.Segment = 'LAM' AND ym.Date BETWEEN '201301' AND '201312'       GROUP BY c.CustomerID       ORDER BY SUM(Consumption) ASC       LIMIT 1) AS LAM,     (SELECT AVG(Consumption) AS KAM_avg       FROM yearmonth AS ym       INNER JOIN customers AS c ON ym.CustomerID = c.CustomerID       WHERE c.Segment = 'KAM' AND ym.Date BETWEEN '201301' AND '201312'       GROUP BY c.CustomerID       ORDER BY SUM(Consumption) ASC       LIMIT 1) AS KAM\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment,         (SUM(CASE WHEN STRFTIME('%Y', Date) = '2013' THEN Consumption ELSE 0 END) -          SUM(CASE WHEN STRFTIME('%Y', Date) = '2012' THEN Consumption ELSE 0 END)) /         SUM(CASE WHEN STRFTIME('%Y', Date) = '2013' THEN Consumption ELSE 0 END) * 100 AS PercentageIncrease FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment IN ('SME', 'LAM', 'KAM') GROUP BY Segment\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT ( (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') ) AS Difference\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (MAX(CASE WHEN CustomerID = 7 THEN Consumption END) - MAX(CASE WHEN CustomerID = 5 THEN Consumption END)) AS ConsumptionDifference  FROM yearmonth  WHERE Date = '201304' AND (CustomerID = 7 OR CustomerID = 5);\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Difference\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T2.Currency = 'EUR' AND T1.Date = '201310' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY SUM(T1.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (SUM(CASE WHEN Y.Consumption > 46.73 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM yearmonth AS Y  INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID  WHERE C.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(*)) * 100 AS percentage FROM customers WHERE Segment = 'KAM'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT (COUNT(DISTINCT CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth)) AS percentage FROM yearmonth WHERE Consumption > 528.3 AND Date = '201202'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM gasstations WHERE Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT T2.Segment FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201309' GROUP BY T2.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date = '201206' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(average_consumption) FROM (SELECT SUM(T1.Consumption) / 12 AS average_consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY T1.CustomerID) AS subquery\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T3.Country FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT T2.Description FROM products AS T2 INNER JOIN transactions_1k AS T1 ON T1.ProductID = T2.ProductID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Price > 1000 AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date > '2012-01-01' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Amount DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T3.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') AND Date = '2012-08-26' AND Time < '13:00:00'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers);\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price = 124.05 AND T2.Date = '2012-08-24' AND T1.Date LIKE '201201%' GROUP BY T1.Date\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T1.Date = '2012-08-26' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT C.Currency FROM customers AS C INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE Y.Consumption = 214582.17 AND Y.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT Country FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE CardID = 667467)\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Amount = 548.4 AND T1.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT CASE WHEN C.Currency = 'EUR' THEN C.CustomerID END) * 100.0 / COUNT(DISTINCT C.CustomerID)) AS Percentage FROM customers AS C INNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID INNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE T.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SUM(CASE WHEN `Date` LIKE '2012%' THEN `Consumption` END) - SUM(CASE WHEN `Date` LIKE '2013%' THEN `Consumption` END)) / SUM(CASE WHEN `Date` LIKE '2012%' THEN `Consumption` END) AS `decrease_rate` FROM `yearmonth` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Amount` = 634.8 AND `Date` = '2012-08-25')\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT GasStationID, SUM(Price * Amount) AS TotalRevenue FROM transactions_1k GROUP BY GasStationID ORDER BY TotalRevenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM customers WHERE CustomerID IN (SELECT CustomerID FROM gasstations WHERE Country = 'SVK')\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount) AS total_spent, SUM(CASE WHEN Date = '201201' THEN Amount ELSE 0 END) AS spent_january_2012 FROM transactions_1k WHERE CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT T2.Description FROM products AS T2 INNER JOIN (SELECT ProductID, SUM(Amount) AS TotalSales FROM transactions_1k GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 5) AS T1 ON T1.ProductID = T2.ProductID\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID,         SUM(T1.Price) / NULLIF(SUM(T1.Amount), 0) AS AveragePricePerItem,         T2.Currency  FROM transactions_1k AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  GROUP BY T1.CustomerID  ORDER BY SUM(T1.Price) DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT G.Country FROM gasstations AS G INNER JOIN transactions_1k AS T ON G.GasStationID = T.GasStationID WHERE T.ProductID = 2 AND T.Price = (SELECT MAX(Price) FROM transactions_1k WHERE ProductID = 2)\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T3.Consumption FROM yearmonth AS T3 WHERE T3.CustomerID IN (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5) AND T3.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}